{;; Parts of this script have been copied from: https://github.com/clj-commons/etaoin/blob/master/bb.edn

 :min-bb-version "1.3.182"
 :paths ["." "scripts"]
 :deps {borkdude/rewrite-edn {:mvn/version "0.4.7"}
        lread/status-line {:git/url "https://github.com/lread/status-line.git"
                           :sha "cf44c15f30ea3867227fa61ceb823e5e942c707f"}
        version-clj/version-clj {:mvn/version "2.0.2"}}
 :tasks
 {;; setup
  :requires ([clojure.string :as string]
             [lread.status-line :as status]
             [babashka.process :refer [shell]])
  :enter (let [{:keys [name]} (current-task)]
           (when-not (string/starts-with? name "-")
             (status/line :head "TASK %s %s" name (string/join " " *command-line-args*))))
  :leave (let [{:keys [name]} (current-task)]
           (when-not (string/starts-with? name "-")
             (status/line :detail "\nTASK %s done." name)))

  ;; commands
  clean {:doc "Delete build work and artifacts"
         :task clean/-main}

  doc-preview {:doc "Preview what docs will look like on cljdoc, use help for args"
               :task cljdoc-preview/-main}

  poly-uberjar {:doc "Builds poly uberjar, if needed (run clean first to force)"
                :requires [poly-jar]
                :task (poly-jar/build "poly")}

  polyx-uberjar {:doc "Builds polyx uberjar, if needed (run clean first to force)"
                 :requires [poly-jar]
                 :task (poly-jar/build "polyx")}

  poly-local {:doc "Installs the poly tool locally"
              :depends [poly-uberjar]
              :task (shell "sudo cp projects/poly/target/poly.jar /usr/local/polylith/poly.jar")}

  help-txt {:doc "Generates doc text files via poly help command"
            :depends [poly-uberjar]
            :requires [help]
            :task (help/help)}

  help-doc {:doc "Assembles doc text into doc/commands.adoc"
            :requires [help]
            :task (help/update-command-doc)}

  update-commands-doc {:doc "Run help-txt then help-doc"
                       :depends [help-txt help-doc]}

  create-example {:doc "Creates and exercises examples workspaces (also generates some doc images and doc code blocks)"
                  :depends [poly-uberjar polyx-uberjar]
                  :requires [create-example]
                  :task create-example/-main}

  gen-all {:doc "Run update-commands-docs then create-example"
           :depends [update-commands-doc create-example]}}}
