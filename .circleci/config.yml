version: 2.0

jobs:
  create-version-txt:
    docker:
      - image: clojure:temurin-21-tools-deps-1.12.0.1479
    working_directory: ~/polylith
    steps:
      - attach_workspace:
          at: ~/polylith
      - restore_cache:
          key: polylith-{{ checksum "deps.edn" }}
      - run:
          name: Add github.com to known hosts
          command: mkdir -p ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Add global git user email
          command: git config --global user.email "circleci@polyfy.com"
      - run:
          name: Add global git user name
          command: git config --global user.name "CircleCI"
      - run:
          name: Create version.txt
          command: clojure -T:build create-version-txt
      - persist_to_workspace:
          root: .
          paths:
            - .
  check:
    docker:
      - image: clojure:temurin-21-tools-deps-1.12.0.1479
    working_directory: ~/polylith
    steps:
      - checkout
      - attach_workspace:
          at: ~/polylith
      - restore_cache:
          key: polylith-{{ checksum "deps.edn" }}
      - run:
          name: Create polylith config if it does not exist
          command: mkdir -p "${XDG_CONFIG_HOME:=${HOME}/.config}/polylith" && echo "{}" > "${XDG_CONFIG_HOME:=${HOME}/.config}/polylith/config.edn"
      - run:
          name: Add github.com to known hosts
          command: mkdir -p ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Add global git user email
          command: git config --global user.email "circleci@polyfy.com"
      - run:
          name: Add global git user name
          command: git config --global user.name "CircleCI"
      - run:
          name: Check Polylith workspace
          command: |
            if [[ "$CIRCLE_BRANCH" = "master" ]]; then
              clojure -M:poly check since:previous-release
            else
              clojure -M:poly check
            fi
      - save_cache:
          key: polylith-{{ checksum "deps.edn" }}
          paths:
            - ${XDG_CONFIG_HOME:=${HOME}/.config}/polylith
            - ~/.m2
            - ~/.lein
            - ~/polylith/.cpcache
      - persist_to_workspace:
          root: .
          paths:
            - .
  info:
    docker:
      - image: clojure:temurin-21-tools-deps-1.12.0.1479
    working_directory: ~/polylith
    steps:
      - attach_workspace:
          at: ~/polylith
      - restore_cache:
          key: polylith-{{ checksum "deps.edn" }}
      - run:
          name: Add github.com to known hosts
          command: mkdir -p ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Add global git user email
          command: git config --global user.email "circleci@polyfy.com"
      - run:
          name: Add global git user name
          command: git config --global user.name "CircleCI"
      - run:
          name: Run ws command for Polylith workspace
          command: |
            if [[ "$CIRCLE_BRANCH" = "master" ]]; then
              clojure -M:poly ws since:previous-release
            else
              clojure -M:poly ws
            fi
      - run:
          name: Run info command for Polylith workspace
          command: |
            if [[ "$CIRCLE_BRANCH" = "master" ]]; then
              clojure -M:poly info since:previous-release
            else
              clojure -M:poly info
            fi
      - run:
          name: Run deps command for Polylith workspace
          command: |
            if [[ "$CIRCLE_BRANCH" = "master" ]]; then
              clojure -M:poly deps since:previous-release
            else
              clojure -M:poly deps
            fi
      - run:
          name: Run libs command for Polylith workspace
          command: |
            if [[ "$CIRCLE_BRANCH" = "master" ]]; then
              clojure -M:poly libs since:previous-release
            else
              clojure -M:poly libs
            fi
  test:
    docker:
      - image: clojure:temurin-21-tools-deps-1.12.0.1479
    working_directory: ~/polylith
    steps:
      - attach_workspace:
          at: ~/polylith
      - restore_cache:
          key: polylith-{{ checksum "deps.edn" }}
      - run:
          name: Add github.com to known hosts
          command: mkdir -p ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Add global git user email
          command: git config --global user.email "circleci@polyfy.com"
      - run:
          name: Add global git user name
          command: git config --global user.name "CircleCI"
      - run:
          name: Force clojure to resolve dependencies
          command: clojure -A:dev:test -P
      - run:
          name: Run tests for Polylith workspace
          command: |
            if [[ "$CIRCLE_BRANCH" = "master" ]]; then
              clojure -M:poly test :project since:previous-release
            else
              clojure -M:poly test :project
            fi
  mark-as-stable:
    docker:
      - image: clojure:temurin-21-tools-deps-1.12.0.1479
    working_directory: ~/polylith
    steps:
      - attach_workspace:
          at: ~/polylith
      - run:
          name: Add github.com to known hosts
          command: mkdir -p ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Add global git user email
          command: git config --global user.email "circleci@polyfy.com"
      - run:
          name: Add global git user name
          command: git config --global user.name "CircleCI"
      - run:
          name: Delete existing stable tag and mark this commit as stable point
          command: |
            TAG_NAME="stable-$CIRCLE_BRANCH"

            if git rev-parse -q --verify "refs/tags/${TAG_NAME}" > /dev/null; then
              git tag -d ${TAG_NAME}
              git push origin --delete ${TAG_NAME}
            fi

            git tag ${TAG_NAME} -m "[skip ci] Added Stable Polylith tag"
            git push origin ${TAG_NAME}
  add-version-tag:
    docker:
      - image: clojure:temurin-21-tools-deps-1.12.0.1479
    working_directory: ~/polylith
    steps:
      - attach_workspace:
          at: ~/polylith
      - run:
          name: Add github.com to known hosts
          command: mkdir -p ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Add global git user email
          command: git config --global user.email "circleci@polyfy.com"
      - run:
          name: Add global git user name
          command: git config --global user.name "CircleCI"
      - run:
          name: Delete existing stable tag and mark this commit as a new version
          command: |
            VERSION=`cat version.txt`

            if [[ "$VERSION" == *-SNAPSHOT ]]; then
              echo "Skip adding tag. Reason: SNAPSHOT build"
            else
              TAG_NAME="v$VERSION"

              if git rev-parse -q --verify "refs/tags/${TAG_NAME}" > /dev/null; then
                echo "Skip adding tag. Reason: Already deployed this version before"
              else
                git tag ${TAG_NAME} -m "[skip ci] Added new version tag"
                git push origin ${TAG_NAME}
              fi
            fi
  deploy:
    docker:
      - image: clojure:temurin-21-tools-deps-1.12.0.1479
    working_directory: ~/polylith
    steps:
      - attach_workspace:
          at: ~/polylith
      - restore_cache:
          key: polylith-{{ checksum "deps.edn" }}
      - run:
          name: Add github.com to known hosts
          command: mkdir -p ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Add global git user email
          command: git config --global user.email "circleci@polyfy.com"
      - run:
          name: Add global git user name
          command: git config --global user.name "CircleCI"
      - run:
          name: Deploy changed projects to clojars and request a cljdoc build if snapshot
          command: |
            VERSION=`cat version.txt`

            if [[ "$VERSION" == *-SNAPSHOT ]]; then
              clojure -T:build deploy-snapshot
            else
              TAG_NAME="v$VERSION"

              if git rev-parse -q --verify "refs/tags/${TAG_NAME}" > /dev/null; then
                echo "Skip deploying. Reason: Already deployed this version before"
              else
                clojure -T:build deploy
              fi
            fi
  create-artifacts:
    docker:
      - image: clojure:temurin-21-tools-deps-1.12.0.1479
    working_directory: ~/polylith
    steps:
      - attach_workspace:
          at: ~/polylith
      - restore_cache:
          key: polylith-{{ checksum "deps.edn" }}
      - run:
          name: Add github.com to known hosts
          command: mkdir -p ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Add global git user email
          command: git config --global user.email "circleci@polyfy.com"
      - run:
          name: Add global git user name
          command: git config --global user.name "CircleCI"
      - run:
          name: Create artifacts
          command: clojure -T:build create-artifacts
      - store_artifacts:
          path: ./artifacts
      - persist_to_workspace:
          root: .
          paths:
            - .
  publish-github-release:
    docker:
      - image: cibuilds/github:0.13
    working_directory: ~/polylith
    steps:
      - attach_workspace:
          at: ~/polylith
      - run:
          name: Add github.com to known hosts
          command: mkdir -p ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Add global git user email
          command: git config --global user.email "circleci@polyfy.com"
      - run:
          name: Add global git user name
          command: git config --global user.name "CircleCI"
      - run:
          name: Publish a new release on GitHub
          command: |
            VERSION=`cat version.txt`

            if [[ "$VERSION" == *-SNAPSHOT ]]; then
              STABLE_TAG="stable-$CIRCLE_BRANCH"
              ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -n "Version ${VERSION}" -replace -prerelease -recreate ${STABLE_TAG} ./artifacts
            else
              VERSION_TAG="v$VERSION"
              ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -n "Version ${VERSION}" -soft ${VERSION_TAG} ./artifacts
            fi

workflows:
  version: 2
  deploy:
    jobs:
      - check
      - info:
          requires:
            - check
      - test:
          requires:
            - check
      - create-version-txt:
          requires:
            - info
            - test
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - create-version-txt
          filters:
            branches:
              only:
                - master
      - mark-as-stable:
          requires:
            - deploy
          filters:
            branches:
              only:
                - master
      - add-version-tag:
          requires:
            - create-version-txt
            - deploy
          filters:
            branches:
              only:
                - master
      - create-artifacts:
          requires:
            - deploy
          filters:
            branches:
              only:
                - master
      - publish-github-release:
          requires:
            - mark-as-stable
            - add-version-tag
            - create-artifacts
          filters:
            branches:
              only:
                - master
