{:interfaces
 [{:name "workspace-clj",
   :type "interface",
   :definitions
   [{:name "workspace-from-disk",
     :type "function",
     :parameters [{:name "user-input"}]}],
   :implementing-components ["workspace-clj"]}
  {:name "test-runner",
   :type "interface",
   :definitions
   [{:name "run",
     :type "function",
     :parameters
     [{:name "workspace"} {:name "is-verbose"} {:name "color-mode"}]}],
   :implementing-components ["test-runner"]}
  {:name "deployer",
   :type "interface",
   :definitions
   [{:name "create-artifacts", :type "function", :parameters []}
    {:name "deploy", :type "function", :parameters []}],
   :implementing-components ["deployer"]}
  {:name "command",
   :type "interface",
   :definitions
   [{:name "execute-command",
     :type "function",
     :parameters [{:name "user-input"}]}
    {:name "read-workspace",
     :type "function",
     :parameters [{:name "ws-dir"} {:name "user-input"}]}],
   :implementing-components ["command"]}
  {:name "text-table",
   :type "interface",
   :definitions
   [{:name "cell",
     :type "function",
     :parameters [{:name "column"} {:name "value"}]}
    {:name "cell",
     :type "function",
     :parameters [{:name "column"} {:name "row"} {:name "value"}]}
    {:name "cell",
     :type "function",
     :parameters
     [{:name "column"} {:name "row"} {:name "value"} {:name "color"}]}
    {:name "cell",
     :type "function",
     :parameters
     [{:name "column"}
      {:name "row"}
      {:name "value"}
      {:name "color"}
      {:name "align"}]}
    {:name "cell",
     :type "function",
     :parameters
     [{:name "column"}
      {:name "row"}
      {:name "value"}
      {:name "color"}
      {:name "align"}
      {:name "orientation"}]}
    {:name "line",
     :type "function",
     :parameters [{:name "row"} {:name "cells"}]}
    {:name "merge-cells",
     :type "function",
     :parameters [{:name "&"} {:name "list-of-cells"}]}
    {:name "number-cell",
     :type "function",
     :parameters
     [{:name "column"}
      {:name "row"}
      {:name "number"}
      {:name "align"}
      {:name "thousand-separator"}]}
    {:name "print-table",
     :type "function",
     :parameters [{:name "table"}]}
    {:name "spaces",
     :type "function",
     :parameters
     [{:name "row"} {:name "column-nums"} {:name "spaces"}]}
    {:name "table",
     :type "function",
     :parameters
     [{:name "initial-spaces"}
      {:name "color-mode"}
      {:name "&"}
      {:name "cells-list"}]}],
   :implementing-components ["text-table"]}
  {:name "util",
   :type "interface",
   :definitions
   [{:name "find-first",
     :type "function",
     :parameters [{:name "predicate"} {:name "sequence"}]}
    {:name "first-as-vector",
     :type "function",
     :parameters [{:name "vals"}]}
    {:name "ordered-map",
     :type "function",
     :parameters [{:name "&"} {:name "keyvals"}]}
    {:name "sort-map", :type "function", :parameters [{:name "m"}]}
    {:name "stringify-and-sort-map",
     :type "function",
     :parameters [{:name "m"}]}
    {:name "def-keys",
     :type "macro",
     :parameters [{:name "amap"} {:name "keys"}]}
    {:name "none", :type "data", :sub-ns "color"}
    {:name "base",
     :type "function",
     :parameters [{:name "name"} {:name "color-mode"}],
     :sub-ns "color"}
    {:name "blue",
     :type "function",
     :parameters [{:name "color-mode"} {:name "&"} {:name "messages"}],
     :sub-ns "color"}
    {:name "brick",
     :type "function",
     :parameters [{:name "type"} {:name "name"} {:name "color-mode"}],
     :sub-ns "color"}
    {:name "clean-colors",
     :type "function",
     :parameters [{:name "message"}],
     :sub-ns "color"}
    {:name "component",
     :type "function",
     :parameters [{:name "name"} {:name "color-mode"}],
     :sub-ns "color"}
    {:name "cyan",
     :type "function",
     :parameters [{:name "color-mode"} {:name "&"} {:name "messages"}],
     :sub-ns "color"}
    {:name "entity",
     :type "function",
     :parameters [{:name "type"} {:name "name"} {:name "color-mode"}],
     :sub-ns "color"}
    {:name "error",
     :type "function",
     :parameters [{:name "color-mode"} {:name "&"} {:name "messages"}],
     :sub-ns "color"}
    {:name "green",
     :type "function",
     :parameters [{:name "color-mode"} {:name "&"} {:name "messages"}],
     :sub-ns "color"}
    {:name "grey",
     :type "function",
     :parameters [{:name "color-mode"} {:name "&"} {:name "messages"}],
     :sub-ns "color"}
    {:name "interface",
     :type "function",
     :parameters [{:name "name"} {:name "color-mode"}],
     :sub-ns "color"}
    {:name "library",
     :type "function",
     :parameters [{:name "name"} {:name "color-mode"}],
     :sub-ns "color"}
    {:name "namespc",
     :type "function",
     :parameters [{:name "name"} {:name "color-mode"}],
     :sub-ns "color"}
    {:name "namespc",
     :type "function",
     :parameters
     [{:name "interface"} {:name "namespace"} {:name "color-mode"}],
     :sub-ns "color"}
    {:name "ok",
     :type "function",
     :parameters [{:name "color-mode"} {:name "&"} {:name "messages"}],
     :sub-ns "color"}
    {:name "path",
     :type "function",
     :parameters [{:name "path"} {:name "color-mode"}],
     :sub-ns "color"}
    {:name "profile",
     :type "function",
     :parameters [{:name "name"} {:name "color-mode"}],
     :sub-ns "color"}
    {:name "project",
     :type "function",
     :parameters [{:name "name"} {:name "color-mode"}],
     :sub-ns "color"}
    {:name "purple",
     :type "function",
     :parameters [{:name "color-mode"} {:name "&"} {:name "messages"}],
     :sub-ns "color"}
    {:name "red",
     :type "function",
     :parameters [{:name "color-mode"} {:name "&"} {:name "messages"}],
     :sub-ns "color"}
    {:name "warning",
     :type "function",
     :parameters [{:name "color-mode"} {:name "&"} {:name "messages"}],
     :sub-ns "color"}
    {:name "yellow",
     :type "function",
     :parameters [{:name "color-mode"} {:name "&"} {:name "messages"}],
     :sub-ns "color"}
    {:name "print-error-message",
     :type "function",
     :parameters [{:name "e"}],
     :sub-ns "exception"}
    {:name "print-exception",
     :type "function",
     :parameters [{:name "cmd"} {:name "e"}],
     :sub-ns "exception"}
    {:name "print-stacktrace",
     :type "function",
     :parameters [{:name "e"}],
     :sub-ns "exception"}
    {:name "windows?", :type "function", :parameters [], :sub-ns "os"}
    {:name "count-things",
     :type "function",
     :parameters [{:name "thing"} {:name "cnt"}],
     :sub-ns "str"}
    {:name "drop-last",
     :type "function",
     :parameters [{:name "n"} {:name "string"}],
     :sub-ns "str"}
    {:name "line",
     :type "function",
     :parameters [{:name "length"}],
     :sub-ns "str"}
    {:name "sep-1000",
     :type "function",
     :parameters [{:name "number"} {:name "sep"}],
     :sub-ns "str"}
    {:name "skip-if-ends-with",
     :type "function",
     :parameters [{:name "string"} {:name "ends-with"}],
     :sub-ns "str"}
    {:name "skip-prefix",
     :type "function",
     :parameters [{:name "string"} {:name "prefix"}],
     :sub-ns "str"}
    {:name "skip-suffix",
     :type "function",
     :parameters [{:name "string"} {:name "suffix"}],
     :sub-ns "str"}
    {:name "skip-suffixes",
     :type "function",
     :parameters [{:name "string"} {:name "suffixes"}],
     :sub-ns "str"}
    {:name "skip-until",
     :type "function",
     :parameters [{:name "string"} {:name "separator"}],
     :sub-ns "str"}
    {:name "spaces",
     :type "function",
     :parameters [{:name "n#spaces"}],
     :sub-ns "str"}
    {:name "take-until",
     :type "function",
     :parameters [{:name "string"} {:name "separator"}],
     :sub-ns "str"}
    {:name "current-time",
     :type "function",
     :parameters [],
     :sub-ns "time"}
    {:name "print-execution-time",
     :type "function",
     :parameters [{:name "start-time"}],
     :sub-ns "time"}],
   :implementing-components ["util"]}
  {:name "user-input",
   :type "interface",
   :definitions
   [{:name "extract-params",
     :type "function",
     :parameters [{:name "args"}]}],
   :implementing-components ["user-input"]}
  {:name "ws-explorer",
   :type "interface",
   :definitions
   [{:name "extract",
     :type "function",
     :parameters [{:name "workspace"} {:name "get"}]}
    {:name "ws",
     :type "function",
     :parameters
     [{:name "workspace"}
      {:name "get"}
      {:name "out"}
      {:name "color-mode"}]}],
   :implementing-components ["ws-explorer"]}
  {:name "creator",
   :type "interface",
   :definitions
   [{:name "create-base",
     :type "function",
     :parameters
     [{:name "workspace"} {:name "base-name"} {:name "is-git-add"}]}
    {:name "create-component",
     :type "function",
     :parameters
     [{:name "workspace"}
      {:name "component-name"}
      {:name "interface-name"}
      {:name "is-git-add"}]}
    {:name "create-project",
     :type "function",
     :parameters
     [{:name "workspace"} {:name "project-name"} {:name "is-git-add"}]}
    {:name "create-workspace",
     :type "function",
     :parameters
     [{:name "root-dir"}
      {:name "ws-name"}
      {:name "top-ns"}
      {:name "branch"}
      {:name "is-git-add"}]}
    {:name "print-alias-message",
     :type "function",
     :parameters [{:name "project-name"} {:name "color-mode"}]}],
   :implementing-components ["creator"]}
  {:name "migrator",
   :type "interface",
   :definitions
   [{:name "migrate",
     :type "function",
     :parameters [{:name "ws-dir"} {:name "workspace"}]}],
   :implementing-components ["migrator"]}
  {:name "shell",
   :type "interface",
   :definitions
   [{:name "start",
     :type "function",
     :parameters
     [{:name "command-executor"}
      {:name "workspace"}
      {:name "color-mode"}]}],
   :implementing-components ["shell"]}
  {:name "workspace",
   :type "interface",
   :definitions
   [{:name "enrich-workspace",
     :type "function",
     :parameters [{:name "workspace"}]}
    {:name "print-info",
     :type "function",
     :parameters [{:name "workspace"}]}],
   :implementing-components ["workspace"]}
  {:name "user-config",
   :type "interface",
   :definitions
   [{:name "color-mode", :type "function", :parameters []}
    {:name "empty-character", :type "function", :parameters []}
    {:name "home-dir", :type "function", :parameters []}
    {:name "m2-dir", :type "function", :parameters []}
    {:name "thousand-separator", :type "function", :parameters []}],
   :implementing-components ["user-config"]}
  {:name "git",
   :type "interface",
   :definitions
   [{:name "branch", :type "data"}
    {:name "repo", :type "data"}
    {:name "add",
     :type "function",
     :parameters [{:name "ws-dir"} {:name "filename"}]}
    {:name "add",
     :type "function",
     :parameters
     [{:name "ws-dir"} {:name "filename"} {:name "is-git-add"}]}
    {:name "current-branch", :type "function", :parameters []}
    {:name "diff",
     :type "function",
     :parameters
     [{:name "ws-dir"}
      {:name "ws-local-dir"}
      {:name "is-no-changes"}
      {:name "sha1"}
      {:name "sha2"}]}
    {:name "diff-command",
     :type "function",
     :parameters [{:name "sha1"} {:name "sha2"}]}
    {:name "init",
     :type "function",
     :parameters
     [{:name "ws-dir"} {:name "git-repo?"} {:name "branch"}]}
    {:name "is-git-repo?",
     :type "function",
     :parameters [{:name "ws-dir"}]}
    {:name "latest-polylith-sha",
     :type "function",
     :parameters [{:name "branch"}]}
    {:name "root-dir", :type "function", :parameters []}
    {:name "sha",
     :type "function",
     :parameters
     [{:name "ws-dir"} {:name "since"} {:name "tag-patterns"}]}],
   :implementing-components ["git"]}
  {:name "deps",
   :type "interface",
   :definitions
   [{:name "interface-deps",
     :type "function",
     :parameters
     [{:name "suffixed-top-ns"}
      {:name "interface-names"}
      {:name "brick"}]}
    {:name "interface-ns-deps",
     :type "function",
     :parameters
     [{:name "suffixed-top-ns"}
      {:name "interface-name"}
      {:name "interface-names"}
      {:name "brick-namespaces"}]}
    {:name "print-brick-table",
     :type "function",
     :parameters [{:name "workspace"} {:name "brick-name"}]}
    {:name "print-project-brick-table",
     :type "function",
     :parameters
     [{:name "workspace"} {:name "project-name"} {:name "brick-name"}]}
    {:name "print-project-table",
     :type "function",
     :parameters
     [{:name "workspace"} {:name "project-name"} {:name "is-all"}]}
    {:name "print-workspace-table",
     :type "function",
     :parameters [{:name "workspace"}]}
    {:name "project-deps",
     :type "function",
     :parameters
     [{:name "components"}
      {:name "bases"}
      {:name "component-names-src"}
      {:name "component-names-test"}
      {:name "base-names-src"}
      {:name "base-names-test"}
      {:name "suffixed-top-ns"}
      {:name "bricks-to-test"}]}
    {:name "resolve-deps",
     :type "function",
     :parameters [{:name "project"} {:name "is-verbose"}]}],
   :implementing-components ["deps"]}
  {:name "lib",
   :type "interface",
   :definitions
   [{:name "brick-lib-deps",
     :type "function",
     :parameters
     [{:name "ws-dir"}
      {:name "ws-type"}
      {:name "config"}
      {:name "top-namespace"}
      {:name "ns-to-lib"}
      {:name "namespaces"}
      {:name "entity-root-path"}
      {:name "user-home"}]}
    {:name "latest-with-sizes",
     :type "function",
     :parameters
     [{:name "ws-dir"}
      {:name "entity-root-path"}
      {:name "libraries"}
      {:name "user-home"}]}
    {:name "print-lib-table",
     :type "function",
     :parameters [{:name "workspace"} {:name "is-all"}]}
    {:name "resolve-libs",
     :type "function",
     :parameters [{:name "src-deps"} {:name "override-deps"}]}
    {:name "with-sizes-vec",
     :type "function",
     :parameters
     [{:name "ws-dir"}
      {:name "entity-root-path"}
      {:name "libraries"}
      {:name "user-home"}]}],
   :implementing-components ["lib"]}
  {:name "api",
   :type "interface",
   :definitions
   [{:name "projects-to-deploy",
     :type "function",
     :parameters [{:name "since"}]}
    {:name "workspace",
     :type "function",
     :parameters [{:name "stable-point"} {:name "&"} {:name "keys"}]}],
   :implementing-components ["api"]}
  {:name "version",
   :type "interface",
   :definitions
   [{:name "date", :type "data"}
    {:name "major", :type "data"}
    {:name "minor", :type "data"}
    {:name "name", :type "data"}
    {:name "patch", :type "data"}
    {:name "revision", :type "data"}
    {:name "version",
     :type "function",
     :parameters [{:name "ws-type"}]}
    {:name "version",
     :type "function",
     :parameters
     [{:name "{:keys [type], :as from-ws}"}
      {:name "from-release-name"}]}],
   :implementing-components ["version"]}
  {:name "validator",
   :type "interface",
   :definitions
   [{:name "has-errors?",
     :type "function",
     :parameters [{:name "messages"}]}
    {:name "print-messages",
     :type "function",
     :parameters [{:name "workspace"}]}
    {:name "validate-brick-config",
     :type "function",
     :parameters [{:name "config"}]}
    {:name "validate-project-deployable-config",
     :type "function",
     :parameters [{:name "ws-type"} {:name "config"}]}
    {:name "validate-project-dev-config",
     :type "function",
     :parameters [{:name "ws-type"} {:name "config"}]}
    {:name "validate-workspace-config",
     :type "function",
     :parameters [{:name "config"}]}
    {:name "validate-ws",
     :type "function",
     :parameters
     [{:name "suffixed-top-ns"}
      {:name "settings"}
      {:name "version"}
      {:name "paths"}
      {:name "interface-names"}
      {:name "interfaces"}
      {:name "components"}
      {:name "bases"}
      {:name "projects"}
      {:name "interface-ns"}
      {:name "user-input"}
      {:name "color-mode"}]}],
   :implementing-components ["validator"]}
  {:name "help",
   :type "interface",
   :definitions
   [{:name "print-help",
     :type "function",
     :parameters
     [{:name "shell?"}
      {:name "cmd"}
      {:name "ent"}
      {:name "is-all"}
      {:name "is-show-project"}
      {:name "is-show-brick"}
      {:name "is-show-workspace"}
      {:name "toolsdeps1?"}
      {:name "color-mode"}]}],
   :implementing-components ["help"]}
  {:name "file",
   :type "interface",
   :definitions
   [{:name "sep", :type "data"}
    {:name "absolute-path",
     :type "function",
     :parameters [{:name "path"}]}
    {:name "copy-dir",
     :type "function",
     :parameters [{:name "from"} {:name "to"}]}
    {:name "copy-file",
     :type "function",
     :parameters [{:name "from"} {:name "to"}]}
    {:name "copy-file+",
     :type "function",
     :parameters [{:name "from"} {:name "to"}]}
    {:name "copy-file-or-dir+",
     :type "function",
     :parameters [{:name "from"} {:name "to"}]}
    {:name "copy-resource-file!",
     :type "function",
     :parameters [{:name "source"} {:name "target-path"}]}
    {:name "create-dir",
     :type "function",
     :parameters [{:name "path", :type "^String"}]}
    {:name "create-file",
     :type "function",
     :parameters [{:name "path"} {:name "rows"}]}
    {:name "create-missing-dirs",
     :type "function",
     :parameters [{:name "filename"}]}
    {:name "create-temp-dir",
     :type "function",
     :parameters [{:name "dir"}]}
    {:name "current-dir", :type "function", :parameters []}
    {:name "delete-dir",
     :type "function",
     :parameters [{:name "path"}]}
    {:name "delete-file",
     :type "function",
     :parameters [{:name "path"}]}
    {:name "directories",
     :type "function",
     :parameters [{:name "dir"}]}
    {:name "directory?",
     :type "function",
     :parameters [{:name "file", :type "^File"}]}
    {:name "exists", :type "function", :parameters [{:name "path"}]}
    {:name "file",
     :type "function",
     :parameters [{:name "f", :type "^String"}]}
    {:name "file-name",
     :type "function",
     :parameters [{:name "file", :type "^File"}]}
    {:name "files", :type "function", :parameters [{:name "dir"}]}
    {:name "files-and-dirs",
     :type "function",
     :parameters [{:name "dir"}]}
    {:name "files-recursively",
     :type "function",
     :parameters [{:name "dir"}]}
    {:name "lines-of-code",
     :type "function",
     :parameters [{:name "file-path"}]}
    {:name "paths-recursively",
     :type "function",
     :parameters [{:name "dir"}]}
    {:name "pretty-spit",
     :type "function",
     :parameters [{:name "filename"} {:name "collection"}]}
    {:name "read-deps-file",
     :type "function",
     :parameters [{:name "path"}]}
    {:name "read-file", :type "function", :parameters [{:name "path"}]}
    {:name "relative-paths",
     :type "function",
     :parameters [{:name "path"}]}
    {:name "size", :type "function", :parameters [{:name "path"}]}],
   :implementing-components ["file"]}
  {:name "sh",
   :type "interface",
   :definitions
   [{:name "execute",
     :type "function",
     :parameters [{:name "&"} {:name "args"}]}
    {:name "execute-ignore-exception",
     :type "function",
     :parameters [{:name "&"} {:name "args"}]}
    {:name "execute-with-return",
     :type "function",
     :parameters [{:name "&"} {:name "args"}]}],
   :implementing-components ["sh"]}
  {:name "ws-file",
   :type "interface",
   :definitions
   [{:name "read-ws-from-file",
     :type "function",
     :parameters [{:name "ws-file"} {:name "user-input"}]}],
   :implementing-components ["ws-file"]}
  {:name "path-finder",
   :type "interface",
   :definitions
   [{:name "paths",
     :type "function",
     :parameters
     [{:name "ws-dir"}
      {:name "projects"}
      {:name "profile-to-settings"}]}
    {:name "=name",
     :type "function",
     :parameters [{:name "entity-name"}],
     :sub-ns "criterias"}
    {:name "base?",
     :type "function",
     :parameters [{:name "{:keys [type]}"}],
     :sub-ns "criterias"}
    {:name "brick?",
     :type "function",
     :parameters [{:name "{:keys [type]}"}],
     :sub-ns "criterias"}
    {:name "component?",
     :type "function",
     :parameters [{:name "{:keys [type]}"}],
     :sub-ns "criterias"}
    {:name "exists?",
     :type "function",
     :parameters [{:name "{:keys [exists?]}"}],
     :sub-ns "criterias"}
    {:name "filter-entries",
     :type "function",
     :parameters [{:name "path-entries"} {:name "criterias"}],
     :sub-ns "criterias"}
    {:name "has-entry?",
     :type "function",
     :parameters [{:name "path-entries"} {:name "criterias"}],
     :sub-ns "criterias"}
    {:name "match?",
     :type "function",
     :parameters [{:name "path-entry"} {:name "criterias"}],
     :sub-ns "criterias"}
    {:name "not-exists?",
     :type "function",
     :parameters [{:name "{:keys [exists?]}"}],
     :sub-ns "criterias"}
    {:name "not-profile?",
     :type "function",
     :parameters [{:name "{:keys [profile?]}"}],
     :sub-ns "criterias"}
    {:name "not-test-or-resources-path",
     :type "function",
     :parameters [{:name "entry"}],
     :sub-ns "criterias"}
    {:name "profile?",
     :type "function",
     :parameters [{:name "{:keys [profile?]}"}],
     :sub-ns "criterias"}
    {:name "project?",
     :type "function",
     :parameters [{:name "{:keys [type]}"}],
     :sub-ns "criterias"}
    {:name "resources-path?",
     :type "function",
     :parameters [{:name "{:keys [path]}"}],
     :sub-ns "criterias"}
    {:name "src-path?",
     :type "function",
     :parameters [{:name "{:keys [path]}"}],
     :sub-ns "criterias"}
    {:name "src?",
     :type "function",
     :parameters [{:name "{:keys [test?]}"}],
     :sub-ns "criterias"}
    {:name "test-path?",
     :type "function",
     :parameters [{:name "{:keys [path]}"}],
     :sub-ns "criterias"}
    {:name "test?",
     :type "function",
     :parameters [{:name "{:keys [test?]}"}],
     :sub-ns "criterias"}
    {:name "truthy",
     :type "function",
     :parameters [{:name "_"}],
     :sub-ns "criterias"}
    {:name "from-library-deps",
     :type "function",
     :parameters [{:name "is-dev"} {:name "deps"} {:name "settings"}],
     :sub-ns "extract"}
    {:name "from-paths",
     :type "function",
     :parameters [{:name "paths"} {:name "disk-paths"}],
     :sub-ns "extract"}
    {:name "from-profiles-paths",
     :type "function",
     :parameters
     [{:name "disk-paths"} {:name "settings"} {:name "profile-name"}],
     :sub-ns "extract"}
    {:name "from-unenriched-project",
     :type "function",
     :parameters
     [{:name "is-dev"}
      {:name "paths"}
      {:name "disk-paths"}
      {:name "settings"}],
     :sub-ns "extract"}
    {:name "entries",
     :type "function",
     :parameters
     [{:name "path-entries"} {:name "&"} {:name "criterias"}],
     :sub-ns "select"}
    {:name "exists?",
     :type "function",
     :parameters
     [{:name "path-entries"} {:name "&"} {:name "criterias"}],
     :sub-ns "select"}
    {:name "lib-deps",
     :type "function",
     :parameters
     [{:name "dep-entries"} {:name "&"} {:name "criterias"}],
     :sub-ns "select"}
    {:name "names",
     :type "function",
     :parameters
     [{:name "path-entries"} {:name "&"} {:name "criterias"}],
     :sub-ns "select"}
    {:name "paths",
     :type "function",
     :parameters
     [{:name "path-entries"} {:name "&"} {:name "criterias"}],
     :sub-ns "select"}
    {:name "brick-status-flags",
     :type "function",
     :parameters
     [{:name "path-entries"}
      {:name "brick-name"}
      {:name "is-show-resources"}],
     :sub-ns "status"}
    {:name "project-status-flags",
     :type "function",
     :parameters
     [{:name "path-entries"}
      {:name "project-name"}
      {:name "is-show-resources"}],
     :sub-ns "status"}],
   :implementing-components ["path-finder"]}
  {:name "test-helper",
   :type "interface",
   :definitions
   [{:name "content",
     :type "function",
     :parameters [{:name "dir"} {:name "filename"}]}
    {:name "execute-command",
     :type "function",
     :parameters [{:name "current-dir"} {:name "&"} {:name "args"}]}
    {:name "paths", :type "function", :parameters [{:name "dir"}]}
    {:name "root-dir", :type "function", :parameters []}
    {:name "test-setup-and-tear-down",
     :type "function",
     :parameters [{:name "function"}]}
    {:name "user-home", :type "function", :parameters []}],
   :implementing-components ["test-helper"]}
  {:name "common",
   :type "interface",
   :definitions
   [{:name "entity->short", :type "data"}
    {:name "absolute-path",
     :type "function",
     :parameters [{:name "path"} {:name "entity-root-path"}]}
    {:name "color-mode",
     :type "function",
     :parameters [{:name "user-input"}]}
    {:name "compact?",
     :type "function",
     :parameters [{:name "workspace"} {:name "view"}]}
    {:name "create-class-loader",
     :type "function",
     :parameters [{:name "paths"} {:name "color-mode"}]}
    {:name "eval-in",
     :type "function",
     :parameters [{:name "class-loader"} {:name "form"}]}
    {:name "extract-namespace",
     :type "function",
     :parameters [{:name "suffixed-top-ns"} {:name "ns-to-extract"}]}
    {:name "filter-clojure-paths",
     :type "function",
     :parameters [{:name "paths"}]}
    {:name "find-base",
     :type "function",
     :parameters [{:name "base-name"} {:name "bases"}]}
    {:name "find-brick",
     :type "function",
     :parameters [{:name "name"} {:name "workspace"}]}
    {:name "find-component",
     :type "function",
     :parameters [{:name "name"} {:name "components"}]}
    {:name "find-project",
     :type "function",
     :parameters [{:name "project-name"} {:name "projects"}]}
    {:name "leiningen-config-key",
     :type "function",
     :parameters [{:name "config-path"} {:name "key"}]}
    {:name "ns-to-path",
     :type "function",
     :parameters [{:name "namespace"}]}
    {:name "path-to-ns",
     :type "function",
     :parameters [{:name "namespace"}]}
    {:name "suffix-ns-with-dot",
     :type "function",
     :parameters [{:name "namespace"}]}
    {:name "toolsdeps1?",
     :type "function",
     :parameters [{:name "workspace"}]}
    {:name "user-path", :type "function", :parameters [{:name "path"}]}
    {:name "valid-ws-root-config-file-found?",
     :type "function",
     :parameters [{:name "ws-dir"} {:name "color-mode"}]}
    {:name "validate-args",
     :type "function",
     :parameters [{:name "unnamed-args"} {:name "example"}]}
    {:name "workspace-dir",
     :type "function",
     :parameters [{:name "user-input"} {:name "color-mode"}]}],
   :implementing-components ["common"]}
  {:name "change",
   :type "interface",
   :definitions
   [{:name "with-changes",
     :type "function",
     :parameters [{:name "workspace"}]}],
   :implementing-components ["change"]}],
 :projects
 [{:lines-of-code {:src 0, :test 0, :total {:src 5343, :test 6100}},
   :namespaces {},
   :base-names {},
   :lib-imports
   {:src
    ["clojure.java.io"
     "clojure.java.shell"
     "clojure.pprint"
     "clojure.set"
     "clojure.stacktrace"
     "clojure.string"
     "clojure.tools.deps.alpha"
     "clojure.tools.deps.alpha.util.maven"
     "clojure.walk"
     "java.io"
     "java.net"
     "java.nio.file"
     "java.util"
     "malli.core"
     "malli.error"
     "me.raynes.fs"
     "org.eclipse.aether.util.version"
     "puget.printer"],
    :test ["clojure.java.shell" "clojure.string" "clojure.test"]},
   :is-dev false,
   :name "api",
   :is-run-tests true,
   :paths
   {:src
    ["components/api/src"
     "components/change/src"
     "components/common/src"
     "components/deps/src"
     "components/file/src"
     "components/git/src"
     "components/lib/src"
     "components/path-finder/src"
     "components/sh/src"
     "components/text-table/src"
     "components/user-config/src"
     "components/user-input/src"
     "components/util/src"
     "components/validator/src"
     "components/version/src"
     "components/workspace-clj/src"
     "components/workspace/src"
     "components/ws-explorer/src"]},
   :type "project",
   :maven-repos
   {"central" {:url "https://repo1.maven.org/maven2/"},
    "clojars" {:url "https://repo.clojars.org/"}},
   :alias "api",
   :project-dir "/Users/joakimtengstrand/source/polylith/projects/api",
   :lib-deps
   {:src
    {"org.clojure/clojure"
     {:version "1.10.3", :type "maven", :size 3914649},
     "org.clojure/tools.deps.alpha"
     {:version "0.12.1003", :type "maven", :size 60953},
     "mvxcvi/puget" {:version "1.3.1", :type "maven", :size 15930},
     "metosin/malli" {:version "0.5.1", :type "maven", :size 43722},
     "clj-commons/fs" {:version "1.6.310", :type "maven", :size 12819}}},
   :config-filename
   "/Users/joakimtengstrand/source/polylith/projects/api/deps.edn",
   :component-names
   {:src
    ["api"
     "change"
     "common"
     "deps"
     "file"
     "git"
     "lib"
     "path-finder"
     "sh"
     "text-table"
     "user-config"
     "user-input"
     "util"
     "validator"
     "version"
     "workspace"
     "workspace-clj"
     "ws-explorer"]},
   :deps
   {"workspace-clj"
    {:src
     {:direct
      ["common"
       "file"
       "git"
       "lib"
       "path-finder"
       "user-config"
       "util"
       "validator"
       "version"],
      :indirect ["deps" "sh" "text-table"]},
     :test {}},
    "text-table" {:src {:direct ["util"]}, :test {}},
    "util" {:src {}, :test {}},
    "user-input" {:src {:direct ["util"]}, :test {}},
    "ws-explorer" {:src {:direct ["util"]}, :test {}},
    "workspace"
    {:src
     {:direct
      ["common"
       "deps"
       "file"
       "path-finder"
       "text-table"
       "util"
       "validator"],
      :indirect ["user-config"]},
     :test {}},
    "user-config" {:src {:direct ["file" "util"]}, :test {}},
    "git" {:src {:direct ["sh" "util"]}, :test {}},
    "deps"
    {:src
     {:direct ["common" "text-table" "util"],
      :indirect ["file" "user-config"]},
     :test {}},
    "lib"
    {:src
     {:direct ["common" "file" "text-table" "user-config" "util"]},
     :test {}},
    "api"
    {:src
     {:direct
      ["change"
       "user-input"
       "workspace"
       "workspace-clj"
       "ws-explorer"],
      :indirect
      ["common"
       "deps"
       "file"
       "git"
       "lib"
       "path-finder"
       "sh"
       "text-table"
       "user-config"
       "util"
       "validator"
       "version"]},
     :test {}},
    "version" {:src {}, :test {}},
    "validator"
    {:src
     {:direct ["common" "deps" "path-finder" "util"],
      :indirect ["file" "text-table" "user-config"]},
     :test {}},
    "file" {:src {:direct ["util"]}, :test {}},
    "sh" {:src {}, :test {}},
    "path-finder" {:src {:direct ["file" "util"]}, :test {}},
    "common" {:src {:direct ["file" "user-config" "util"]}, :test {}},
    "change"
    {:src
     {:direct ["git" "path-finder" "util"], :indirect ["file" "sh"]},
     :test {}}}}
  {:lines-of-code {:src 0, :test 0, :total {:src 4368, :test 5901}},
   :namespaces {},
   :base-names {},
   :lib-imports
   {:src
    ["clojure.java.io"
     "clojure.java.shell"
     "clojure.pprint"
     "clojure.set"
     "clojure.stacktrace"
     "clojure.string"
     "clojure.tools.deps.alpha"
     "clojure.walk"
     "java.io"
     "java.net"
     "java.nio.file"
     "java.util"
     "malli.core"
     "malli.error"
     "me.raynes.fs"
     "org.eclipse.aether.util.version"],
    :test ["clojure.java.shell" "clojure.string" "clojure.test"]},
   :is-dev false,
   :name "core",
   :is-run-tests true,
   :paths
   {:src
    ["components/change/src"
     "components/common/src"
     "components/deps/src"
     "components/file/src"
     "components/git/src"
     "components/lib/src"
     "components/path-finder/src"
     "components/sh/src"
     "components/text-table/src"
     "components/user-config/src"
     "components/user-input/src"
     "components/util/src"
     "components/validator/src"
     "components/workspace/src"]},
   :type "project",
   :maven-repos
   {"central" {:url "https://repo1.maven.org/maven2/"},
    "clojars" {:url "https://repo.clojars.org/"}},
   :alias "core",
   :project-dir
   "/Users/joakimtengstrand/source/polylith/projects/core",
   :lib-deps
   {:src
    {"org.clojure/clojure"
     {:version "1.10.3", :type "maven", :size 3914649},
     "org.clojure/tools.deps.alpha"
     {:version "0.12.1003", :type "maven", :size 60953},
     "metosin/malli" {:version "0.5.1", :type "maven", :size 43722},
     "clj-commons/fs" {:version "1.6.310", :type "maven", :size 12819}}},
   :config-filename
   "/Users/joakimtengstrand/source/polylith/projects/core/deps.edn",
   :component-names
   {:src
    ["change"
     "common"
     "deps"
     "file"
     "git"
     "lib"
     "path-finder"
     "sh"
     "text-table"
     "user-config"
     "user-input"
     "util"
     "validator"
     "workspace"]},
   :deps
   {"text-table" {:src {:direct ["util"]}, :test {}},
    "util" {:src {}, :test {}},
    "user-input" {:src {:direct ["util"]}, :test {}},
    "workspace"
    {:src
     {:direct
      ["common"
       "deps"
       "file"
       "path-finder"
       "text-table"
       "util"
       "validator"],
      :indirect ["user-config"]},
     :test {}},
    "user-config" {:src {:direct ["file" "util"]}, :test {}},
    "git" {:src {:direct ["sh" "util"]}, :test {}},
    "deps"
    {:src
     {:direct ["common" "text-table" "util"],
      :indirect ["file" "user-config"]},
     :test {}},
    "lib"
    {:src
     {:direct ["common" "file" "text-table" "user-config" "util"]},
     :test {}},
    "validator"
    {:src
     {:direct ["common" "deps" "path-finder" "util"],
      :indirect ["file" "text-table" "user-config"]},
     :test {}},
    "file" {:src {:direct ["util"]}, :test {}},
    "sh" {:src {}, :test {}},
    "path-finder" {:src {:direct ["file" "util"]}, :test {}},
    "common" {:src {:direct ["file" "user-config" "util"]}, :test {}},
    "change"
    {:src
     {:direct ["git" "path-finder" "util"], :indirect ["file" "sh"]},
     :test {}}}}
  {:lines-of-code {:src 0, :test 0, :total {:src 5517, :test 6100}},
   :namespaces {},
   :base-names {:src ["deployer-cli"]},
   :lib-imports
   {:src
    ["clojure.java.io"
     "clojure.java.shell"
     "clojure.pprint"
     "clojure.set"
     "clojure.stacktrace"
     "clojure.string"
     "clojure.tools.deps.alpha"
     "clojure.tools.deps.alpha.util.maven"
     "clojure.walk"
     "deps-deploy.deps-deploy"
     "java.io"
     "java.net"
     "java.nio.file"
     "java.util"
     "malli.core"
     "malli.error"
     "me.raynes.fs"
     "org.eclipse.aether.util.version"
     "puget.printer"],
    :test ["clojure.java.shell" "clojure.string" "clojure.test"]},
   :is-dev false,
   :name "deployer",
   :is-run-tests true,
   :paths
   {:src
    ["bases/deployer-cli/src"
     "components/api/src"
     "components/change/src"
     "components/common/src"
     "components/deployer/src"
     "components/deps/src"
     "components/file/src"
     "components/git/src"
     "components/lib/src"
     "components/path-finder/src"
     "components/sh/src"
     "components/text-table/src"
     "components/user-config/src"
     "components/user-input/src"
     "components/util/src"
     "components/validator/src"
     "components/version/src"
     "components/workspace-clj/src"
     "components/workspace/src"
     "components/ws-explorer/src"]},
   :type "project",
   :maven-repos
   {"central" {:url "https://repo1.maven.org/maven2/"},
    "clojars" {:url "https://repo.clojars.org/"}},
   :alias "depl",
   :project-dir
   "/Users/joakimtengstrand/source/polylith/projects/deployer",
   :lib-deps
   {:src
    {"org.clojure/clojure"
     {:version "1.10.3", :type "maven", :size 3914649},
     "org.slf4j/slf4j-nop"
     {:version "1.7.32", :type "maven", :size 4020},
     "org.clojure/tools.deps.alpha"
     {:version "0.12.1003", :type "maven", :size 60953},
     "slipset/deps-deploy"
     {:version "0.1.5", :type "maven", :size 6205},
     "mvxcvi/puget" {:version "1.3.1", :type "maven", :size 15930},
     "metosin/malli" {:version "0.5.1", :type "maven", :size 43722},
     "clj-commons/fs" {:version "1.6.310", :type "maven", :size 12819}}},
   :config-filename
   "/Users/joakimtengstrand/source/polylith/projects/deployer/deps.edn",
   :component-names
   {:src
    ["api"
     "change"
     "common"
     "deployer"
     "deps"
     "file"
     "git"
     "lib"
     "path-finder"
     "sh"
     "text-table"
     "user-config"
     "user-input"
     "util"
     "validator"
     "version"
     "workspace"
     "workspace-clj"
     "ws-explorer"]},
   :deps
   {"workspace-clj"
    {:src
     {:direct
      ["common"
       "file"
       "git"
       "lib"
       "path-finder"
       "user-config"
       "util"
       "validator"
       "version"],
      :indirect ["deps" "sh" "text-table"]},
     :test {}},
    "deployer"
    {:src
     {:direct ["api" "file" "sh" "version"],
      :indirect
      ["change"
       "common"
       "deps"
       "git"
       "lib"
       "path-finder"
       "text-table"
       "user-config"
       "user-input"
       "util"
       "validator"
       "workspace"
       "workspace-clj"
       "ws-explorer"]},
     :test {}},
    "text-table" {:src {:direct ["util"]}, :test {}},
    "util" {:src {}, :test {}},
    "user-input" {:src {:direct ["util"]}, :test {}},
    "ws-explorer" {:src {:direct ["util"]}, :test {}},
    "workspace"
    {:src
     {:direct
      ["common"
       "deps"
       "file"
       "path-finder"
       "text-table"
       "util"
       "validator"],
      :indirect ["user-config"]},
     :test {}},
    "user-config" {:src {:direct ["file" "util"]}, :test {}},
    "git" {:src {:direct ["sh" "util"]}, :test {}},
    "deps"
    {:src
     {:direct ["common" "text-table" "util"],
      :indirect ["file" "user-config"]},
     :test {}},
    "lib"
    {:src
     {:direct ["common" "file" "text-table" "user-config" "util"]},
     :test {}},
    "api"
    {:src
     {:direct
      ["change"
       "user-input"
       "workspace"
       "workspace-clj"
       "ws-explorer"],
      :indirect
      ["common"
       "deps"
       "file"
       "git"
       "lib"
       "path-finder"
       "sh"
       "text-table"
       "user-config"
       "util"
       "validator"
       "version"]},
     :test {}},
    "version" {:src {}, :test {}},
    "validator"
    {:src
     {:direct ["common" "deps" "path-finder" "util"],
      :indirect ["file" "text-table" "user-config"]},
     :test {}},
    "file" {:src {:direct ["util"]}, :test {}},
    "sh" {:src {}, :test {}},
    "deployer-cli"
    {:src
     {:direct ["deployer"],
      :indirect
      ["api"
       "change"
       "common"
       "deps"
       "file"
       "git"
       "lib"
       "path-finder"
       "sh"
       "text-table"
       "user-config"
       "user-input"
       "util"
       "validator"
       "version"
       "workspace"
       "workspace-clj"
       "ws-explorer"]},
     :test {}},
    "path-finder" {:src {:direct ["file" "util"]}, :test {}},
    "common" {:src {:direct ["file" "user-config" "util"]}, :test {}},
    "change"
    {:src
     {:direct ["git" "path-finder" "util"], :indirect ["file" "sh"]},
     :test {}}}}
  {:lines-of-code
   {:src 0, :test 613, :total {:src 15557, :test 13430}},
   :namespaces
   {:test
    [{:name "project.poly.workspace-test",
      :namespace "project.poly.workspace-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/projects/poly/test/project/poly/workspace_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.change.interface"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.deps.text-table.brick-deps-table"
       "polylith.clj.core.deps.text-table.project-brick-deps-table"
       "polylith.clj.core.deps.text-table.project-deps-table"
       "polylith.clj.core.deps.text-table.workspace-deps-table"
       "polylith.clj.core.lib.text-table.lib-table"
       "polylith.clj.core.user-input.interface"
       "polylith.clj.core.workspace-clj.interface"
       "polylith.clj.core.workspace.interface"
       "polylith.clj.core.workspace.text-table.project-table"
       "polylith.clj.core.workspace.text-table.ws-table"
       "polylith.clj.core.ws-explorer.core"]}]},
   :base-names {:src ["poly-cli"]},
   :lib-imports
   {:src
    ["clojure.java.io"
     "clojure.java.shell"
     "clojure.lang"
     "clojure.pprint"
     "clojure.set"
     "clojure.stacktrace"
     "clojure.string"
     "clojure.tools.deps.alpha"
     "clojure.tools.deps.alpha.util.maven"
     "clojure.walk"
     "java.io"
     "java.net"
     "java.nio.file"
     "java.util"
     "malli.core"
     "malli.error"
     "me.raynes.fs"
     "org.eclipse.aether.util.version"
     "org.jline.reader"
     "org.jline.reader.impl"
     "org.jline.terminal"
     "portal.api"
     "puget.printer"
     "zprint.core"],
    :test ["clojure.java.shell" "clojure.string" "clojure.test"]},
   :is-dev false,
   :name "poly",
   :is-run-tests true,
   :paths
   {:src
    ["bases/poly-cli/src"
     "components/change/src"
     "components/command/src"
     "components/common/src"
     "components/creator/resources"
     "components/creator/src"
     "components/deps/src"
     "components/file/src"
     "components/git/src"
     "components/help/src"
     "components/lib/src"
     "components/migrator/src"
     "components/path-finder/src"
     "components/sh/src"
     "components/shell/src"
     "components/test-runner/src"
     "components/text-table/src"
     "components/user-config/src"
     "components/user-input/src"
     "components/util/src"
     "components/validator/src"
     "components/version/src"
     "components/workspace-clj/src"
     "components/workspace/src"
     "components/ws-explorer/src"
     "components/ws-file/src"],
    :test
    ["components/change/test"
     "components/command/test"
     "components/creator/test"
     "components/deps/test"
     "components/file/test"
     "components/git/test"
     "components/lib/test"
     "components/migrator/test"
     "components/path-finder/test"
     "components/shell/test"
     "components/test-helper/src"
     "components/test-runner/test"
     "components/user-input/test"
     "components/util/test"
     "components/validator/test"
     "components/workspace-clj/test"
     "components/workspace/test"
     "components/ws-explorer/test"
     "projects/poly/test"]},
   :type "project",
   :maven-repos
   {"central" {:url "https://repo1.maven.org/maven2/"},
    "clojars" {:url "https://repo.clojars.org/"}},
   :alias "poly",
   :project-dir
   "/Users/joakimtengstrand/source/polylith/projects/poly",
   :lib-deps
   {:src
    {"zprint/zprint" {:version "1.1.2", :type "maven", :size 168772},
     "mvxcvi/puget" {:version "1.3.1", :type "maven", :size 15930},
     "org.slf4j/slf4j-nop"
     {:version "1.7.32", :type "maven", :size 4020},
     "metosin/malli" {:version "0.5.1", :type "maven", :size 43722},
     "clj-commons/fs" {:version "1.6.310", :type "maven", :size 12819},
     "com.github.polyfy/jline"
     {:version "3.20.0", :type "maven", :size 1006075},
     "org.clojure/tools.deps.alpha"
     {:version "0.12.1003", :type "maven", :size 60953},
     "djblue/portal" {:version "0.13.0", :type "maven", :size 617207},
     "org.clojure/clojure"
     {:version "1.10.3", :type "maven", :size 3914649}}},
   :config-filename
   "/Users/joakimtengstrand/source/polylith/projects/poly/deps.edn",
   :component-names
   {:src
    ["change"
     "command"
     "common"
     "creator"
     "deps"
     "file"
     "git"
     "help"
     "lib"
     "migrator"
     "path-finder"
     "sh"
     "shell"
     "test-runner"
     "text-table"
     "user-config"
     "user-input"
     "util"
     "validator"
     "version"
     "workspace"
     "workspace-clj"
     "ws-explorer"
     "ws-file"],
    :test
    ["change"
     "command"
     "creator"
     "deps"
     "file"
     "git"
     "lib"
     "migrator"
     "path-finder"
     "shell"
     "test-helper"
     "test-runner"
     "user-input"
     "util"
     "validator"
     "workspace"
     "workspace-clj"
     "ws-explorer"]},
   :deps
   {"workspace-clj"
    {:src
     {:direct
      ["common"
       "file"
       "git"
       "lib"
       "path-finder"
       "user-config"
       "util"
       "validator"
       "version"],
      :indirect ["deps" "sh" "text-table"]},
     :test
     {:direct
      ["common"
       "file"
       "git"
       "lib"
       "path-finder"
       "user-config"
       "util"
       "validator"
       "version"],
      :indirect ["deps" "sh" "text-table"]}},
    "test-runner"
    {:src
     {:direct ["common" "deps" "util" "validator"],
      :indirect ["file" "path-finder" "text-table" "user-config"]},
     :test {}},
    "command"
    {:src
     {:direct
      ["change"
       "common"
       "creator"
       "deps"
       "file"
       "git"
       "help"
       "lib"
       "migrator"
       "shell"
       "test-runner"
       "user-config"
       "util"
       "validator"
       "version"
       "workspace"
       "workspace-clj"
       "ws-explorer"
       "ws-file"],
      :indirect ["path-finder" "sh" "text-table" "user-input"]},
     :test
     {:direct
      ["change"
       "common"
       "creator"
       "deps"
       "file"
       "git"
       "help"
       "lib"
       "migrator"
       "shell"
       "test-runner"
       "user-config"
       "util"
       "validator"
       "version"
       "workspace"
       "workspace-clj"
       "ws-explorer"
       "ws-file"],
      :indirect ["path-finder" "sh" "text-table" "user-input"]}},
    "text-table" {:src {:direct ["util"]}, :test {}},
    "util" {:src {}, :test {}},
    "user-input" {:src {:direct ["util"]}, :test {:direct ["util"]}},
    "ws-explorer" {:src {:direct ["util"]}, :test {:direct ["util"]}},
    "creator"
    {:src
     {:direct ["common" "file" "git" "util"],
      :indirect ["sh" "user-config"]},
     :test
     {:direct ["common" "file" "git" "test-helper" "util"],
      :indirect
      ["change"
       "command"
       "creator"
       "deps"
       "help"
       "lib"
       "migrator"
       "path-finder"
       "sh"
       "shell"
       "test-runner"
       "text-table"
       "user-config"
       "user-input"
       "validator"
       "version"
       "workspace"
       "workspace-clj"
       "ws-explorer"
       "ws-file"]}},
    "migrator"
    {:src
     {:direct ["common" "file"], :indirect ["user-config" "util"]},
     :test {}},
    "shell"
    {:src
     {:direct ["common" "file" "user-input" "util" "ws-explorer"],
      :indirect ["user-config"]},
     :test
     {:direct ["common" "file" "user-input" "util" "ws-explorer"],
      :indirect ["user-config"]}},
    "workspace"
    {:src
     {:direct
      ["common"
       "deps"
       "file"
       "path-finder"
       "text-table"
       "util"
       "validator"],
      :indirect ["user-config"]},
     :test
     {:direct
      ["common"
       "deps"
       "file"
       "path-finder"
       "test-helper"
       "text-table"
       "util"
       "validator"],
      :indirect
      ["change"
       "command"
       "creator"
       "git"
       "help"
       "lib"
       "migrator"
       "sh"
       "shell"
       "test-runner"
       "user-config"
       "user-input"
       "version"
       "workspace"
       "workspace-clj"
       "ws-explorer"
       "ws-file"]}},
    "user-config" {:src {:direct ["file" "util"]}, :test {}},
    "poly-cli"
    {:src
     {:direct ["command" "user-input" "util"],
      :indirect
      ["change"
       "common"
       "creator"
       "deps"
       "file"
       "git"
       "help"
       "lib"
       "migrator"
       "path-finder"
       "sh"
       "shell"
       "test-runner"
       "text-table"
       "user-config"
       "validator"
       "version"
       "workspace"
       "workspace-clj"
       "ws-explorer"
       "ws-file"]},
     :test {}},
    "git"
    {:src {:direct ["sh" "util"]}, :test {:direct ["sh" "util"]}},
    "deps"
    {:src
     {:direct ["common" "text-table" "util"],
      :indirect ["file" "user-config"]},
     :test
     {:direct ["common" "text-table" "util"],
      :indirect ["file" "user-config"]}},
    "lib"
    {:src
     {:direct ["common" "file" "text-table" "user-config" "util"]},
     :test
     {:direct
      ["common"
       "file"
       "test-helper"
       "text-table"
       "user-config"
       "util"],
      :indirect
      ["change"
       "command"
       "creator"
       "deps"
       "git"
       "help"
       "lib"
       "migrator"
       "path-finder"
       "sh"
       "shell"
       "test-runner"
       "user-input"
       "validator"
       "version"
       "workspace"
       "workspace-clj"
       "ws-explorer"
       "ws-file"]}},
    "version" {:src {}, :test {}},
    "validator"
    {:src
     {:direct ["common" "deps" "path-finder" "util"],
      :indirect ["file" "text-table" "user-config"]},
     :test
     {:direct ["common" "deps" "path-finder" "util"],
      :indirect ["file" "text-table" "user-config"]}},
    "help"
    {:src
     {:direct ["common" "util" "version"],
      :indirect ["file" "user-config"]},
     :test {}},
    "file" {:src {:direct ["util"]}, :test {}},
    "sh" {:src {}, :test {}},
    "ws-file"
    {:src
     {:direct ["common" "file" "git" "version"],
      :indirect ["sh" "user-config" "util"]},
     :test {}},
    "path-finder"
    {:src {:direct ["file" "util"]}, :test {:direct ["file" "util"]}},
    "test-helper"
    {:src {},
     :test
     {:direct ["command" "file" "user-config" "user-input"],
      :indirect
      ["change"
       "common"
       "creator"
       "deps"
       "git"
       "help"
       "lib"
       "migrator"
       "path-finder"
       "sh"
       "shell"
       "test-runner"
       "text-table"
       "util"
       "validator"
       "version"
       "workspace"
       "workspace-clj"
       "ws-explorer"
       "ws-file"]}},
    "common" {:src {:direct ["file" "user-config" "util"]}, :test {}},
    "change"
    {:src
     {:direct ["git" "path-finder" "util"], :indirect ["file" "sh"]},
     :test
     {:direct ["git" "path-finder" "util"], :indirect ["file" "sh"]}}}}
  {:lines-of-code
   {:src 128, :test 0, :total {:src 15849, :test 13434}},
   :namespaces
   {:src
    [{:name "dev.dev-common",
      :namespace "dev.dev-common",
      :file-path
      "/Users/joakimtengstrand/source/polylith/development/src/dev/dev_common.clj",
      :imports
      ["polylith.clj.core.command.interface"
       "polylith.clj.core.user-input.interface"]}
     {:name "dev.development",
      :namespace "dev.development",
      :file-path
      "/Users/joakimtengstrand/source/polylith/development/src/dev/development.clj",
      :imports
      ["dev.dev-common"
       "polylith.clj.core.change.interface"
       "polylith.clj.core.command.info"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.deps.text-table.brick-deps-table"
       "polylith.clj.core.deps.text-table.project-brick-deps-table"
       "polylith.clj.core.deps.text-table.project-deps-table"
       "polylith.clj.core.deps.text-table.workspace-deps-table"
       "polylith.clj.core.lib.text-table.lib-table"
       "polylith.clj.core.workspace-clj.interface"
       "polylith.clj.core.workspace.interface"]}
     {:name "dev.jocke",
      :namespace "dev.jocke",
      :file-path
      "/Users/joakimtengstrand/source/polylith/development/src/dev/jocke.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "clojure.tools.deps.alpha"
       "clojure.tools.deps.alpha.util.maven"
       "dev.dev-common"
       "polylith.clj.core.api.interface"
       "polylith.clj.core.change.interface"
       "polylith.clj.core.command.interface"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.git.interface"
       "polylith.clj.core.help.interface"
       "polylith.clj.core.path-finder.interface.extract"
       "polylith.clj.core.user-input.interface"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.workspace-clj.interface"
       "polylith.clj.core.workspace.interface"]}]},
   :base-names {:src ["deployer-cli" "poly-cli"]},
   :lib-imports
   {:src
    ["clojure.java.io"
     "clojure.java.shell"
     "clojure.lang"
     "clojure.pprint"
     "clojure.set"
     "clojure.stacktrace"
     "clojure.string"
     "clojure.tools.deps.alpha"
     "clojure.tools.deps.alpha.util.maven"
     "clojure.walk"
     "deps-deploy.deps-deploy"
     "java.io"
     "java.net"
     "java.nio.file"
     "java.util"
     "malli.core"
     "malli.error"
     "me.raynes.fs"
     "org.eclipse.aether.util.version"
     "org.jline.reader"
     "org.jline.reader.impl"
     "org.jline.terminal"
     "portal.api"
     "puget.printer"
     "zprint.core"],
    :test ["clojure.java.shell" "clojure.string" "clojure.test"]},
   :is-dev true,
   :name "development",
   :is-run-tests false,
   :paths
   {:src
    ["bases/deployer-cli/src"
     "bases/poly-cli/src"
     "components/api/src"
     "components/change/src"
     "components/command/src"
     "components/common/src"
     "components/creator/resources"
     "components/creator/src"
     "components/deployer/src"
     "components/deps/src"
     "components/file/src"
     "components/git/src"
     "components/help/src"
     "components/lib/src"
     "components/migrator/src"
     "components/path-finder/src"
     "components/sh/src"
     "components/shell/src"
     "components/test-helper/src"
     "components/test-runner/src"
     "components/text-table/src"
     "components/user-config/src"
     "components/user-input/src"
     "components/util/src"
     "components/validator/src"
     "components/version/src"
     "components/workspace-clj/src"
     "components/workspace/src"
     "components/ws-explorer/src"
     "components/ws-file/src"
     "development/src"],
    :test
    ["components/api/test"
     "components/change/test"
     "components/command/test"
     "components/creator/test"
     "components/deps/test"
     "components/file/test"
     "components/git/test"
     "components/lib/test"
     "components/migrator/test"
     "components/path-finder/test"
     "components/shell/test"
     "components/test-runner/test"
     "components/user-input/test"
     "components/util/test"
     "components/validator/test"
     "components/workspace-clj/test"
     "components/workspace/test"
     "components/ws-explorer/test"
     "projects/poly/test"]},
   :type "project",
   :maven-repos
   {"central" {:url "https://repo1.maven.org/maven2/"},
    "clojars" {:url "https://repo.clojars.org/"}},
   :alias "dev",
   :project-dir "/Users/joakimtengstrand/source/polylith/development",
   :unmerged
   {:paths
    {:src
     ["bases/deployer-cli/src"
      "bases/poly-cli/src"
      "components/api/src"
      "components/change/src"
      "components/command/src"
      "components/common/src"
      "components/creator/resources"
      "components/creator/src"
      "components/deployer/src"
      "components/deps/src"
      "components/file/src"
      "components/git/src"
      "components/help/src"
      "components/lib/src"
      "components/migrator/src"
      "components/path-finder/src"
      "components/sh/src"
      "components/shell/src"
      "components/test-helper/src"
      "components/test-runner/src"
      "components/text-table/src"
      "components/user-config/src"
      "components/user-input/src"
      "components/util/src"
      "components/validator/src"
      "components/version/src"
      "components/workspace-clj/src"
      "components/workspace/src"
      "components/ws-explorer/src"
      "components/ws-file/src"
      "development/src"],
     :test
     ["components/api/test"
      "components/change/test"
      "components/command/test"
      "components/creator/test"
      "components/deps/test"
      "components/file/test"
      "components/git/test"
      "components/lib/test"
      "components/migrator/test"
      "components/path-finder/test"
      "components/shell/test"
      "components/test-runner/test"
      "components/user-input/test"
      "components/util/test"
      "components/validator/test"
      "components/workspace-clj/test"
      "components/workspace/test"
      "components/ws-explorer/test"
      "projects/poly/test"]},
    :lib-deps
    {:src
     {"zprint/zprint" {:version "1.1.2", :type "maven", :size 168772},
      "mvxcvi/puget" {:version "1.3.1", :type "maven", :size 15930},
      "org.slf4j/slf4j-nop"
      {:version "1.7.32", :type "maven", :size 4020},
      "slipset/deps-deploy"
      {:version "0.1.5", :type "maven", :size 6205},
      "metosin/malli" {:version "0.5.1", :type "maven", :size 43722},
      "mount/mount" {:version "0.1.16", :type "maven", :size 9157},
      "rewrite-clj/rewrite-clj"
      {:version "1.0.644-alpha", :type "maven", :size 73108},
      "clj-commons/fs" {:version "1.6.310", :type "maven", :size 12819},
      "com.github.polyfy/jline"
      {:version "3.20.0", :type "maven", :size 1006075},
      "org.clojure/tools.deps.alpha"
      {:version "0.12.1003", :type "maven", :size 60953},
      "djblue/portal" {:version "0.13.0", :type "maven", :size 617207},
      "org.clojure/clojure"
      {:version "1.10.3", :type "maven", :size 3914649}}}},
   :lib-deps
   {:src
    {"zprint/zprint" {:version "1.1.2", :type "maven", :size 168772},
     "mvxcvi/puget" {:version "1.3.1", :type "maven", :size 15930},
     "org.slf4j/slf4j-nop"
     {:version "1.7.32", :type "maven", :size 4020},
     "slipset/deps-deploy"
     {:version "0.1.5", :type "maven", :size 6205},
     "metosin/malli" {:version "0.5.1", :type "maven", :size 43722},
     "mount/mount" {:version "0.1.16", :type "maven", :size 9157},
     "rewrite-clj/rewrite-clj"
     {:version "1.0.644-alpha", :type "maven", :size 73108},
     "clj-commons/fs" {:version "1.6.310", :type "maven", :size 12819},
     "com.github.polyfy/jline"
     {:version "3.20.0", :type "maven", :size 1006075},
     "org.clojure/tools.deps.alpha"
     {:version "0.12.1003", :type "maven", :size 60953},
     "djblue/portal" {:version "0.13.0", :type "maven", :size 617207},
     "org.clojure/clojure"
     {:version "1.10.3", :type "maven", :size 3914649}}},
   :config-filename "/Users/joakimtengstrand/source/polylith/deps.edn",
   :component-names
   {:src
    ["api"
     "change"
     "command"
     "common"
     "creator"
     "deployer"
     "deps"
     "file"
     "git"
     "help"
     "lib"
     "migrator"
     "path-finder"
     "sh"
     "shell"
     "test-helper"
     "test-runner"
     "text-table"
     "user-config"
     "user-input"
     "util"
     "validator"
     "version"
     "workspace"
     "workspace-clj"
     "ws-explorer"
     "ws-file"],
    :test
    ["api"
     "change"
     "command"
     "creator"
     "deps"
     "file"
     "git"
     "lib"
     "migrator"
     "path-finder"
     "shell"
     "test-runner"
     "user-input"
     "util"
     "validator"
     "workspace"
     "workspace-clj"
     "ws-explorer"]},
   :deps
   {"workspace-clj"
    {:src
     {:direct
      ["common"
       "file"
       "git"
       "lib"
       "path-finder"
       "user-config"
       "util"
       "validator"
       "version"],
      :indirect ["deps" "sh" "text-table"]},
     :test
     {:direct
      ["common"
       "file"
       "git"
       "lib"
       "path-finder"
       "user-config"
       "util"
       "validator"
       "version"],
      :indirect ["deps" "sh" "text-table"]}},
    "test-runner"
    {:src
     {:direct ["common" "deps" "util" "validator"],
      :indirect ["file" "path-finder" "text-table" "user-config"]},
     :test {}},
    "deployer"
    {:src
     {:direct ["api" "file" "sh" "version"],
      :indirect
      ["change"
       "common"
       "deps"
       "git"
       "lib"
       "path-finder"
       "text-table"
       "user-config"
       "user-input"
       "util"
       "validator"
       "workspace"
       "workspace-clj"
       "ws-explorer"]},
     :test {}},
    "command"
    {:src
     {:direct
      ["change"
       "common"
       "creator"
       "deps"
       "file"
       "git"
       "help"
       "lib"
       "migrator"
       "shell"
       "test-runner"
       "user-config"
       "util"
       "validator"
       "version"
       "workspace"
       "workspace-clj"
       "ws-explorer"
       "ws-file"],
      :indirect ["path-finder" "sh" "text-table" "user-input"]},
     :test
     {:direct
      ["change"
       "common"
       "creator"
       "deps"
       "file"
       "git"
       "help"
       "lib"
       "migrator"
       "shell"
       "test-runner"
       "user-config"
       "util"
       "validator"
       "version"
       "workspace"
       "workspace-clj"
       "ws-explorer"
       "ws-file"],
      :indirect ["path-finder" "sh" "text-table" "user-input"]}},
    "text-table" {:src {:direct ["util"]}, :test {}},
    "util" {:src {}, :test {}},
    "user-input" {:src {:direct ["util"]}, :test {:direct ["util"]}},
    "ws-explorer" {:src {:direct ["util"]}, :test {:direct ["util"]}},
    "creator"
    {:src
     {:direct ["common" "file" "git" "util"],
      :indirect ["sh" "user-config"]},
     :test
     {:direct ["common" "file" "git" "test-helper" "util"],
      :indirect
      ["change"
       "command"
       "creator"
       "deps"
       "help"
       "lib"
       "migrator"
       "path-finder"
       "sh"
       "shell"
       "test-runner"
       "text-table"
       "user-config"
       "user-input"
       "validator"
       "version"
       "workspace"
       "workspace-clj"
       "ws-explorer"
       "ws-file"]}},
    "migrator"
    {:src
     {:direct ["common" "file"], :indirect ["user-config" "util"]},
     :test {}},
    "shell"
    {:src
     {:direct ["common" "file" "user-input" "util" "ws-explorer"],
      :indirect ["user-config"]},
     :test
     {:direct ["common" "file" "user-input" "util" "ws-explorer"],
      :indirect ["user-config"]}},
    "workspace"
    {:src
     {:direct
      ["common"
       "deps"
       "file"
       "path-finder"
       "text-table"
       "util"
       "validator"],
      :indirect ["user-config"]},
     :test
     {:direct
      ["common"
       "deps"
       "file"
       "path-finder"
       "test-helper"
       "text-table"
       "util"
       "validator"],
      :indirect
      ["change"
       "command"
       "creator"
       "git"
       "help"
       "lib"
       "migrator"
       "sh"
       "shell"
       "test-runner"
       "user-config"
       "user-input"
       "version"
       "workspace"
       "workspace-clj"
       "ws-explorer"
       "ws-file"]}},
    "user-config" {:src {:direct ["file" "util"]}, :test {}},
    "poly-cli"
    {:src
     {:direct ["command" "user-input" "util"],
      :indirect
      ["change"
       "common"
       "creator"
       "deps"
       "file"
       "git"
       "help"
       "lib"
       "migrator"
       "path-finder"
       "sh"
       "shell"
       "test-runner"
       "text-table"
       "user-config"
       "validator"
       "version"
       "workspace"
       "workspace-clj"
       "ws-explorer"
       "ws-file"]},
     :test {}},
    "git"
    {:src {:direct ["sh" "util"]}, :test {:direct ["sh" "util"]}},
    "deps"
    {:src
     {:direct ["common" "text-table" "util"],
      :indirect ["file" "user-config"]},
     :test
     {:direct ["common" "text-table" "util"],
      :indirect ["file" "user-config"]}},
    "lib"
    {:src
     {:direct ["common" "file" "text-table" "user-config" "util"]},
     :test
     {:direct
      ["common"
       "file"
       "test-helper"
       "text-table"
       "user-config"
       "util"],
      :indirect
      ["change"
       "command"
       "creator"
       "deps"
       "git"
       "help"
       "lib"
       "migrator"
       "path-finder"
       "sh"
       "shell"
       "test-runner"
       "user-input"
       "validator"
       "version"
       "workspace"
       "workspace-clj"
       "ws-explorer"
       "ws-file"]}},
    "api"
    {:src
     {:direct
      ["change"
       "user-input"
       "workspace"
       "workspace-clj"
       "ws-explorer"],
      :indirect
      ["common"
       "deps"
       "file"
       "git"
       "lib"
       "path-finder"
       "sh"
       "text-table"
       "user-config"
       "util"
       "validator"
       "version"]},
     :test {}},
    "version" {:src {}, :test {}},
    "validator"
    {:src
     {:direct ["common" "deps" "path-finder" "util"],
      :indirect ["file" "text-table" "user-config"]},
     :test
     {:direct ["common" "deps" "path-finder" "util"],
      :indirect ["file" "text-table" "user-config"]}},
    "help"
    {:src
     {:direct ["common" "util" "version"],
      :indirect ["file" "user-config"]},
     :test {}},
    "file" {:src {:direct ["util"]}, :test {}},
    "sh" {:src {}, :test {}},
    "ws-file"
    {:src
     {:direct ["common" "file" "git" "version"],
      :indirect ["sh" "user-config" "util"]},
     :test {}},
    "deployer-cli"
    {:src
     {:direct ["deployer"],
      :indirect
      ["api"
       "change"
       "common"
       "deps"
       "file"
       "git"
       "lib"
       "path-finder"
       "sh"
       "text-table"
       "user-config"
       "user-input"
       "util"
       "validator"
       "version"
       "workspace"
       "workspace-clj"
       "ws-explorer"]},
     :test {}},
    "path-finder"
    {:src {:direct ["file" "util"]}, :test {:direct ["file" "util"]}},
    "test-helper"
    {:src
     {:direct ["command" "file" "user-config" "user-input"],
      :indirect
      ["change"
       "common"
       "creator"
       "deps"
       "git"
       "help"
       "lib"
       "migrator"
       "path-finder"
       "sh"
       "shell"
       "test-runner"
       "text-table"
       "util"
       "validator"
       "version"
       "workspace"
       "workspace-clj"
       "ws-explorer"
       "ws-file"]},
     :test {}},
    "common" {:src {:direct ["file" "user-config" "util"]}, :test {}},
    "change"
    {:src
     {:direct ["git" "path-finder" "util"], :indirect ["file" "sh"]},
     :test
     {:direct ["git" "path-finder" "util"],
      :indirect ["file" "sh"]}}}}],
 :ws-dir "/Users/joakimtengstrand/source/polylith",
 :name "polylith",
 :user-input
 {:args
  ["info"
   "ws-dir:."
   ":project"
   ":user-home"
   "replace:/Users/joakimtengstrand:USER-HOME"],
  :cmd "info",
  :is-search-for-ws-dir false,
  :is-all false,
  :is-compact false,
  :is-dev false,
  :is-latest-sha false,
  :is-no-changes false,
  :is-no-exit false,
  :is-show-brick false,
  :is-show-workspace false,
  :is-show-project true,
  :is-show-loc false,
  :is-run-all-brick-tests false,
  :is-run-project-tests true,
  :is-show-resources false,
  :is-verbose false,
  :replace [{:from "/Users/joakimtengstrand", :to "USER-HOME"}],
  :ws-dir ".",
  :selected-profiles #{},
  :selected-projects #{},
  :unnamed-args []},
 :settings
 {:vcs
  {:name "git",
   :branch "shell",
   :git-root "/Users/joakimtengstrand/source/polylith",
   :auto-add false,
   :stable-since
   {:tag "stable-master",
    :sha "8835ad63e6e336ae98939e6467096f0146f5a89c"},
   :polylith
   {:repo "https://github.com/polyfy/polylith.git", :branch "master"}},
  :top-namespace "polylith.clj.core",
  :interface-ns "interface",
  :default-profile-name "default",
  :active-profiles #{},
  :tag-patterns {:stable "stable-*", :release "v[0-9]*"},
  :color-mode "dark",
  :compact-views #{},
  :user-config-filename "/Users/joakimtengstrand/.polylith/config.edn",
  :empty-character ".",
  :thousand-separator ",",
  :profile-to-settings {},
  :projects
  {"development" {:alias "dev"},
   "api" {:alias "api", :test {:include []}},
   "core" {:alias "core", :test {:include []}},
   "deployer" {:alias "depl", :test {:include []}},
   "poly-migrator" {:alias "migr", :test {:include []}},
   "poly" {:alias "poly"}},
  :user-home "/Users/joakimtengstrand",
  :m2-dir "/Users/joakimtengstrand/.m2"},
 :ws-reader
 {:name "polylith-clj",
  :project-url "https://github.com/polyfy/polylith",
  :language "Clojure",
  :type-position "postfix",
  :file-extensions ["clj" "cljc"]},
 :paths
 {:existing
  ["bases/deployer-cli/src"
   "bases/poly-cli/src"
   "components/api/src"
   "components/api/test"
   "components/change/src"
   "components/change/test"
   "components/command/src"
   "components/command/test"
   "components/common/src"
   "components/creator/resources"
   "components/creator/src"
   "components/creator/test"
   "components/deployer/src"
   "components/deps/src"
   "components/deps/test"
   "components/file/src"
   "components/file/test"
   "components/git/src"
   "components/git/test"
   "components/help/src"
   "components/lib/src"
   "components/lib/test"
   "components/migrator/src"
   "components/migrator/test"
   "components/path-finder/src"
   "components/path-finder/test"
   "components/sh/src"
   "components/shell/src"
   "components/shell/test"
   "components/test-helper/src"
   "components/test-runner/src"
   "components/test-runner/test"
   "components/text-table/src"
   "components/user-config/src"
   "components/user-input/src"
   "components/user-input/test"
   "components/util/src"
   "components/util/test"
   "components/validator/src"
   "components/validator/test"
   "components/version/src"
   "components/workspace-clj/src"
   "components/workspace-clj/test"
   "components/workspace/src"
   "components/workspace/test"
   "components/ws-explorer/src"
   "components/ws-explorer/test"
   "components/ws-file/src"
   "development/src"
   "projects/poly/test"],
  :missing [],
  :on-disk
  ["bases/deployer-cli/src"
   "bases/poly-cli/src"
   "components/api/src"
   "components/api/test"
   "components/change/src"
   "components/change/test"
   "components/command/src"
   "components/command/test"
   "components/common/src"
   "components/creator/resources"
   "components/creator/src"
   "components/creator/test"
   "components/deployer/src"
   "components/deps/src"
   "components/deps/test"
   "components/file/src"
   "components/file/test"
   "components/git/src"
   "components/git/test"
   "components/help/src"
   "components/lib/src"
   "components/lib/test"
   "components/migrator/src"
   "components/migrator/test"
   "components/path-finder/src"
   "components/path-finder/test"
   "components/sh/src"
   "components/shell/src"
   "components/shell/test"
   "components/test-helper/src"
   "components/test-runner/src"
   "components/test-runner/test"
   "components/text-table/src"
   "components/user-config/src"
   "components/user-input/src"
   "components/user-input/test"
   "components/util/src"
   "components/util/test"
   "components/validator/src"
   "components/validator/test"
   "components/version/src"
   "components/workspace-clj/src"
   "components/workspace-clj/test"
   "components/workspace/src"
   "components/workspace/test"
   "components/ws-explorer/src"
   "components/ws-explorer/test"
   "components/ws-file/src"
   "projects/poly/test"]},
 :messages [],
 :components
 [{:lines-of-code {:src 59, :test 2},
   :interface
   {:name "api",
    :definitions
    [{:name "projects-to-deploy",
      :type "function",
      :parameters [{:name "since"}]}
     {:name "workspace",
      :type "function",
      :parameters
      [{:name "stable-point"} {:name "&"} {:name "keys"}]}]},
   :namespaces
   {:src
    [{:name "interface",
      :namespace "polylith.clj.core.api.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/api/src/polylith/clj/core/api/interface.clj",
      :imports ["polylith.clj.core.api.core"]}
     {:name "core",
      :namespace "polylith.clj.core.api.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/api/src/polylith/clj/core/api/core.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.change.interface"
       "polylith.clj.core.user-input.interface"
       "polylith.clj.core.workspace-clj.interface"
       "polylith.clj.core.workspace.interface"
       "polylith.clj.core.ws-explorer.interface"]}],
    :test
    [{:name "interface-test",
      :namespace "polylith.clj.core.api.interface-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/api/test/polylith/clj/core/api/interface_test.clj",
      :imports ["clojure.test"]}]},
   :lib-imports {:src ["clojure.string"], :test ["clojure.test"]},
   :name "api",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps
   {:src
    ["change" "user-input" "workspace" "workspace-clj" "ws-explorer"],
    :test []},
   :lib-deps {}}
  {:lines-of-code {:src 187, :test 515},
   :interface
   {:name "change",
    :definitions
    [{:name "with-changes",
      :type "function",
      :parameters [{:name "workspace"}]}]},
   :namespaces
   {:src
    [{:name "interface",
      :namespace "polylith.clj.core.change.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/change/src/polylith/clj/core/change/interface.clj",
      :imports ["polylith.clj.core.change.core"]}
     {:name "core",
      :namespace "polylith.clj.core.change.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/change/src/polylith/clj/core/change/core.clj",
      :imports
      ["clojure.set"
       "polylith.clj.core.change.bricks-to-test"
       "polylith.clj.core.change.entity"
       "polylith.clj.core.change.indirect"
       "polylith.clj.core.change.projects-to-test"
       "polylith.clj.core.git.interface"
       "polylith.clj.core.util.interface"]}
     {:name "entity",
      :namespace "polylith.clj.core.change.entity",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/change/src/polylith/clj/core/change/entity.clj",
      :imports
      ["polylith.clj.core.path-finder.interface.criterias"
       "polylith.clj.core.path-finder.interface.extract"
       "polylith.clj.core.path-finder.interface.select"]}
     {:name "projects-to-test",
      :namespace "polylith.clj.core.change.projects-to-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/change/src/polylith/clj/core/change/projects_to_test.clj",
      :imports
      ["clojure.set"
       "polylith.clj.core.path-finder.interface.criterias"
       "polylith.clj.core.path-finder.interface.extract"
       "polylith.clj.core.path-finder.interface.select"]}
     {:name "indirect",
      :namespace "polylith.clj.core.change.indirect",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/change/src/polylith/clj/core/change/indirect.clj",
      :imports ["clojure.set"]}
     {:name "bricks-to-test",
      :namespace "polylith.clj.core.change.bricks-to-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/change/src/polylith/clj/core/change/bricks_to_test.clj",
      :imports ["clojure.set"]}
     {:name "project",
      :namespace "polylith.clj.core.change.project",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/change/src/polylith/clj/core/change/project.clj",
      :imports ["clojure.set"]}],
    :test
    [{:name "core-test",
      :namespace "polylith.clj.core.change.core-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/change/test/polylith/clj/core/change/core_test.clj",
      :imports ["clojure.test" "polylith.clj.core.change.core"]}
     {:name "project-test",
      :namespace "polylith.clj.core.change.project-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/change/test/polylith/clj/core/change/project_test.clj",
      :imports ["clojure.test" "polylith.clj.core.change.project"]}
     {:name "test-data",
      :namespace "polylith.clj.core.change.test-data",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/change/test/polylith/clj/core/change/test_data.clj",
      :imports ["clojure.test"]}
     {:name "indirect-test",
      :namespace "polylith.clj.core.change.indirect-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/change/test/polylith/clj/core/change/indirect_test.clj",
      :imports ["clojure.test" "polylith.clj.core.change.indirect"]}
     {:name "brick-test",
      :namespace "polylith.clj.core.change.brick-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/change/test/polylith/clj/core/change/brick_test.clj",
      :imports ["clojure.test" "polylith.clj.core.change.entity"]}
     {:name "bricks-to-test-test",
      :namespace "polylith.clj.core.change.bricks-to-test-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/change/test/polylith/clj/core/change/bricks_to_test_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.change.bricks-to-test"
       "polylith.clj.core.change.test-data"]}]},
   :lib-imports {:src ["clojure.set"], :test ["clojure.test"]},
   :name "change",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps {:src ["git" "path-finder" "util"], :test []},
   :lib-deps {}}
  {:lines-of-code {:src 301, :test 142},
   :interface
   {:name "command",
    :definitions
    [{:name "execute-command",
      :type "function",
      :parameters [{:name "user-input"}]}
     {:name "read-workspace",
      :type "function",
      :parameters [{:name "ws-dir"} {:name "user-input"}]}]},
   :namespaces
   {:src
    [{:name "create",
      :namespace "polylith.clj.core.command.create",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/src/polylith/clj/core/command/create.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.creator.interface"]}
     {:name "interface",
      :namespace "polylith.clj.core.command.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/src/polylith/clj/core/command/interface.clj",
      :imports ["polylith.clj.core.command.core"]}
     {:name "cmd-validator.create",
      :namespace "polylith.clj.core.command.cmd-validator.create",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/src/polylith/clj/core/command/cmd_validator/create.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.command.message"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.git.interface"]}
     {:name "cmd-validator.executable",
      :namespace "polylith.clj.core.command.cmd-validator.executable",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/src/polylith/clj/core/command/cmd_validator/executable.clj",
      :imports
      ["polylith.clj.core.command.message"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.file.interface"]}
     {:name "cmd-validator.core",
      :namespace "polylith.clj.core.command.cmd-validator.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/src/polylith/clj/core/command/cmd_validator/core.clj",
      :imports
      ["polylith.clj.core.command.cmd-validator.create"
       "polylith.clj.core.command.cmd-validator.executable"
       "polylith.clj.core.command.cmd-validator.profile"
       "polylith.clj.core.command.cmd-validator.project"]}
     {:name "cmd-validator.profile",
      :namespace "polylith.clj.core.command.cmd-validator.profile",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/src/polylith/clj/core/command/cmd_validator/profile.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "polylith.clj.core.util.interface.color"]}
     {:name "cmd-validator.project",
      :namespace "polylith.clj.core.command.cmd-validator.project",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/src/polylith/clj/core/command/cmd_validator/project.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "polylith.clj.core.util.interface.color"]}
     {:name "exit-code",
      :namespace "polylith.clj.core.command.exit-code",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/src/polylith/clj/core/command/exit_code.clj",
      :imports []}
     {:name "info",
      :namespace "polylith.clj.core.command.info",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/src/polylith/clj/core/command/info.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.workspace.interface"]}
     {:name "core",
      :namespace "polylith.clj.core.command.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/src/polylith/clj/core/command/core.clj",
      :imports
      ["polylith.clj.core.change.interface"
       "polylith.clj.core.command.cmd-validator.core"
       "polylith.clj.core.command.create"
       "polylith.clj.core.command.dependencies"
       "polylith.clj.core.command.exit-code"
       "polylith.clj.core.command.info"
       "polylith.clj.core.command.test"
       "polylith.clj.core.command.user-config"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.help.interface"
       "polylith.clj.core.lib.interface"
       "polylith.clj.core.migrator.interface"
       "polylith.clj.core.shell.interface"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.interface"
       "polylith.clj.core.version.interface"
       "polylith.clj.core.workspace-clj.interface"
       "polylith.clj.core.workspace.interface"
       "polylith.clj.core.ws-explorer.interface"
       "polylith.clj.core.ws-file.interface"]}
     {:name "message",
      :namespace "polylith.clj.core.command.message",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/src/polylith/clj/core/command/message.clj",
      :imports []}
     {:name "user-config",
      :namespace "polylith.clj.core.command.user-config",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/src/polylith/clj/core/command/user_config.clj",
      :imports
      ["polylith.clj.core.file.interface"
       "polylith.clj.core.user-config.interface"
       "polylith.clj.core.util.interface.os"]}
     {:name "dependencies",
      :namespace "polylith.clj.core.command.dependencies",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/src/polylith/clj/core/command/dependencies.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.deps.interface"]}
     {:name "test",
      :namespace "polylith.clj.core.command.test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/src/polylith/clj/core/command/test.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.test-runner.interface"]}],
    :test
    [{:name "cmd-validator.core-test",
      :namespace "polylith.clj.core.command.cmd-validator.core-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/test/polylith/clj/core/command/cmd_validator/core_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.command.cmd-validator.core"
       "polylith.clj.core.util.interface.color"]}
     {:name "cmd-validator.executable-outside-ws-test",
      :namespace
      "polylith.clj.core.command.cmd-validator.executable-outside-ws-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/test/polylith/clj/core/command/cmd_validator/executable_outside_ws_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.command.cmd-validator.executable"]}
     {:name "cmd-validator.executable-ws-file-is-set-test",
      :namespace
      "polylith.clj.core.command.cmd-validator.executable-ws-file-is-set-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/test/polylith/clj/core/command/cmd_validator/executable_ws_file_is_set_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.command.cmd-validator.executable"]}
     {:name "cmd-validator.project-test",
      :namespace
      "polylith.clj.core.command.cmd-validator.project-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/test/polylith/clj/core/command/cmd_validator/project_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.command.cmd-validator.project"
       "polylith.clj.core.util.interface.color"]}
     {:name "cmd-validator.cant-execute-test-test",
      :namespace
      "polylith.clj.core.command.cmd-validator.cant-execute-test-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/test/polylith/clj/core/command/cmd_validator/cant_execute_test_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.command.cmd-validator.executable"]}
     {:name "cmd-validator.profile-test",
      :namespace
      "polylith.clj.core.command.cmd-validator.profile-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/command/test/polylith/clj/core/command/cmd_validator/profile_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.command.cmd-validator.profile"
       "polylith.clj.core.util.interface.color"]}]},
   :lib-imports
   {:src ["clojure.set" "clojure.string"], :test ["clojure.test"]},
   :name "command",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps
   {:src
    ["change"
     "common"
     "creator"
     "deps"
     "file"
     "git"
     "help"
     "lib"
     "migrator"
     "shell"
     "test-runner"
     "user-config"
     "util"
     "validator"
     "version"
     "workspace"
     "workspace-clj"
     "ws-explorer"
     "ws-file"],
    :test ["util"]},
   :lib-deps {}}
  {:lines-of-code {:src 325, :test 0},
   :interface
   {:name "common",
    :definitions
    [{:name "entity->short", :type "data"}
     {:name "absolute-path",
      :type "function",
      :parameters [{:name "path"} {:name "entity-root-path"}]}
     {:name "color-mode",
      :type "function",
      :parameters [{:name "user-input"}]}
     {:name "compact?",
      :type "function",
      :parameters [{:name "workspace"} {:name "view"}]}
     {:name "create-class-loader",
      :type "function",
      :parameters [{:name "paths"} {:name "color-mode"}]}
     {:name "eval-in",
      :type "function",
      :parameters [{:name "class-loader"} {:name "form"}]}
     {:name "extract-namespace",
      :type "function",
      :parameters [{:name "suffixed-top-ns"} {:name "ns-to-extract"}]}
     {:name "filter-clojure-paths",
      :type "function",
      :parameters [{:name "paths"}]}
     {:name "find-base",
      :type "function",
      :parameters [{:name "base-name"} {:name "bases"}]}
     {:name "find-brick",
      :type "function",
      :parameters [{:name "name"} {:name "workspace"}]}
     {:name "find-component",
      :type "function",
      :parameters [{:name "name"} {:name "components"}]}
     {:name "find-project",
      :type "function",
      :parameters [{:name "project-name"} {:name "projects"}]}
     {:name "leiningen-config-key",
      :type "function",
      :parameters [{:name "config-path"} {:name "key"}]}
     {:name "ns-to-path",
      :type "function",
      :parameters [{:name "namespace"}]}
     {:name "path-to-ns",
      :type "function",
      :parameters [{:name "namespace"}]}
     {:name "suffix-ns-with-dot",
      :type "function",
      :parameters [{:name "namespace"}]}
     {:name "toolsdeps1?",
      :type "function",
      :parameters [{:name "workspace"}]}
     {:name "user-path",
      :type "function",
      :parameters [{:name "path"}]}
     {:name "valid-ws-root-config-file-found?",
      :type "function",
      :parameters [{:name "ws-dir"} {:name "color-mode"}]}
     {:name "validate-args",
      :type "function",
      :parameters [{:name "unnamed-args"} {:name "example"}]}
     {:name "workspace-dir",
      :type "function",
      :parameters [{:name "user-input"} {:name "color-mode"}]}]},
   :namespaces
   {:src
    [{:name "config",
      :namespace "polylith.clj.core.common.config",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/common/src/polylith/clj/core/common/config.clj",
      :imports
      ["polylith.clj.core.common.leiningen"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.util.interface.color"]}
     {:name "interface",
      :namespace "polylith.clj.core.common.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/common/src/polylith/clj/core/common/interface.clj",
      :imports
      ["polylith.clj.core.common.class-loader"
       "polylith.clj.core.common.config"
       "polylith.clj.core.common.core"
       "polylith.clj.core.common.leiningen"
       "polylith.clj.core.common.ns-extractor"
       "polylith.clj.core.common.validate-args"
       "polylith.clj.core.common.ws-dir"]}
     {:name "ns-extractor",
      :namespace "polylith.clj.core.common.ns-extractor",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/common/src/polylith/clj/core/common/ns_extractor.clj",
      :imports ["clojure.string"]}
     {:name "leiningen",
      :namespace "polylith.clj.core.common.leiningen",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/common/src/polylith/clj/core/common/leiningen.clj",
      :imports ["polylith.clj.core.file.interface"]}
     {:name "core",
      :namespace "polylith.clj.core.common.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/common/src/polylith/clj/core/common/core.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.user-config.interface"
       "polylith.clj.core.util.interface"]}
     {:name "class-loader",
      :namespace "polylith.clj.core.common.class-loader",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/common/src/polylith/clj/core/common/class_loader.clj",
      :imports
      ["clojure.java.io"
       "clojure.string"
       "java.net"
       "polylith.clj.core.util.interface.color"]}
     {:name "validate-args",
      :namespace "polylith.clj.core.common.validate-args",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/common/src/polylith/clj/core/common/validate_args.clj",
      :imports ["clojure.string"]}
     {:name "ws-dir",
      :namespace "polylith.clj.core.common.ws-dir",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/common/src/polylith/clj/core/common/ws_dir.clj",
      :imports
      ["clojure.string"
       "java.io"
       "polylith.clj.core.common.config"
       "polylith.clj.core.common.core"
       "polylith.clj.core.file.interface"]}]},
   :lib-imports
   {:src ["clojure.java.io" "clojure.string" "java.io" "java.net"]},
   :name "common",
   :paths {:src ["src"], :test []},
   :type "component",
   :interface-deps {:src ["file" "user-config" "util"], :test []},
   :lib-deps {}}
  {:lines-of-code {:src 282, :test 412},
   :interface
   {:name "creator",
    :definitions
    [{:name "create-base",
      :type "function",
      :parameters
      [{:name "workspace"} {:name "base-name"} {:name "is-git-add"}]}
     {:name "create-component",
      :type "function",
      :parameters
      [{:name "workspace"}
       {:name "component-name"}
       {:name "interface-name"}
       {:name "is-git-add"}]}
     {:name "create-project",
      :type "function",
      :parameters
      [{:name "workspace"}
       {:name "project-name"}
       {:name "is-git-add"}]}
     {:name "create-workspace",
      :type "function",
      :parameters
      [{:name "root-dir"}
       {:name "ws-name"}
       {:name "top-ns"}
       {:name "branch"}
       {:name "is-git-add"}]}
     {:name "print-alias-message",
      :type "function",
      :parameters [{:name "project-name"} {:name "color-mode"}]}]},
   :namespaces
   {:src
    [{:name "interface",
      :namespace "polylith.clj.core.creator.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/creator/src/polylith/clj/core/creator/interface.clj",
      :imports
      ["polylith.clj.core.creator.base"
       "polylith.clj.core.creator.component"
       "polylith.clj.core.creator.project"
       "polylith.clj.core.creator.workspace"]}
     {:name "brick",
      :namespace "polylith.clj.core.creator.brick",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/creator/src/polylith/clj/core/creator/brick.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.git.interface"]}
     {:name "base",
      :namespace "polylith.clj.core.creator.base",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/creator/src/polylith/clj/core/creator/base.clj",
      :imports ["polylith.clj.core.creator.brick"]}
     {:name "workspace",
      :namespace "polylith.clj.core.creator.workspace",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/creator/src/polylith/clj/core/creator/workspace.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.git.interface"]}
     {:name "component",
      :namespace "polylith.clj.core.creator.component",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/creator/src/polylith/clj/core/creator/component.clj",
      :imports ["polylith.clj.core.creator.brick"]}
     {:name "project",
      :namespace "polylith.clj.core.creator.project",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/creator/src/polylith/clj/core/creator/project.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.git.interface"
       "polylith.clj.core.util.interface.color"]}],
    :test
    [{:name "base-test",
      :namespace "polylith.clj.core.creator.base-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/creator/test/polylith/clj/core/creator/base_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.creator.brick"
       "polylith.clj.core.test-helper.interface"]}
     {:name "project-test",
      :namespace "polylith.clj.core.creator.project-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/creator/test/polylith/clj/core/creator/project_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.test-helper.interface"
       "polylith.clj.core.util.interface.color"]}
     {:name "workspace-test",
      :namespace "polylith.clj.core.creator.workspace-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/creator/test/polylith/clj/core/creator/workspace_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.git.interface"
       "polylith.clj.core.test-helper.interface"]}
     {:name "component-test",
      :namespace "polylith.clj.core.creator.component-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/creator/test/polylith/clj/core/creator/component_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.creator.brick"
       "polylith.clj.core.test-helper.interface"]}]},
   :lib-imports {:src ["clojure.string"], :test ["clojure.test"]},
   :name "creator",
   :paths {:src ["src" "resources"], :test ["test"]},
   :type "component",
   :interface-deps
   {:src ["common" "file" "git" "util"],
    :test ["git" "test-helper" "util"]},
   :lib-deps {}}
  {:lines-of-code {:src 154, :test 0},
   :interface
   {:name "deployer",
    :definitions
    [{:name "create-artifacts", :type "function", :parameters []}
     {:name "deploy", :type "function", :parameters []}]},
   :namespaces
   {:src
    [{:name "interface",
      :namespace "polylith.clj.core.deployer.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deployer/src/polylith/clj/core/deployer/interface.clj",
      :imports ["polylith.clj.core.deployer.core"]}
     {:name "core",
      :namespace "polylith.clj.core.deployer.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deployer/src/polylith/clj/core/deployer/core.clj",
      :imports
      ["clojure.string"
       "deps-deploy.deps-deploy"
       "java.io"
       "polylith.clj.core.api.interface"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.sh.interface"
       "polylith.clj.core.version.interface"]}]},
   :lib-imports
   {:src ["clojure.string" "deps-deploy.deps-deploy" "java.io"]},
   :name "deployer",
   :paths {:src ["src"], :test []},
   :type "component",
   :interface-deps {:src ["api" "file" "sh" "version"], :test []},
   :lib-deps
   {:src
    {"slipset/deps-deploy"
     {:version "0.1.5", :type "maven", :size 6205}}}}
  {:lines-of-code {:src 657, :test 784},
   :interface
   {:name "deps",
    :definitions
    [{:name "interface-deps",
      :type "function",
      :parameters
      [{:name "suffixed-top-ns"}
       {:name "interface-names"}
       {:name "brick"}]}
     {:name "interface-ns-deps",
      :type "function",
      :parameters
      [{:name "suffixed-top-ns"}
       {:name "interface-name"}
       {:name "interface-names"}
       {:name "brick-namespaces"}]}
     {:name "print-brick-table",
      :type "function",
      :parameters [{:name "workspace"} {:name "brick-name"}]}
     {:name "print-project-brick-table",
      :type "function",
      :parameters
      [{:name "workspace"}
       {:name "project-name"}
       {:name "brick-name"}]}
     {:name "print-project-table",
      :type "function",
      :parameters
      [{:name "workspace"} {:name "project-name"} {:name "is-all"}]}
     {:name "print-workspace-table",
      :type "function",
      :parameters [{:name "workspace"}]}
     {:name "project-deps",
      :type "function",
      :parameters
      [{:name "components"}
       {:name "bases"}
       {:name "component-names-src"}
       {:name "component-names-test"}
       {:name "base-names-src"}
       {:name "base-names-test"}
       {:name "suffixed-top-ns"}
       {:name "bricks-to-test"}]}
     {:name "resolve-deps",
      :type "function",
      :parameters [{:name "project"} {:name "is-verbose"}]}]},
   :namespaces
   {:src
    [{:name "interface",
      :namespace "polylith.clj.core.deps.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deps/src/polylith/clj/core/deps/interface.clj",
      :imports
      ["polylith.clj.core.deps.interface-deps"
       "polylith.clj.core.deps.lib-deps"
       "polylith.clj.core.deps.project-brick-deps"
       "polylith.clj.core.deps.text-table.brick-deps-table"
       "polylith.clj.core.deps.text-table.project-brick-deps-table"
       "polylith.clj.core.deps.text-table.project-deps-table"
       "polylith.clj.core.deps.text-table.workspace-deps-table"]}
     {:name "lib-deps",
      :namespace "polylith.clj.core.deps.lib-deps",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deps/src/polylith/clj/core/deps/lib_deps.clj",
      :imports ["clojure.tools.deps.alpha"]}
     {:name "text-table.project-deps-table",
      :namespace
      "polylith.clj.core.deps.text-table.project-deps-table",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deps/src/polylith/clj/core/deps/text_table/project_deps_table.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.text-table.interface"
       "polylith.clj.core.util.interface.color"]}
     {:name "text-table.project-brick-deps-table",
      :namespace
      "polylith.clj.core.deps.text-table.project-brick-deps-table",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deps/src/polylith/clj/core/deps/text_table/project_brick_deps_table.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.deps.brick-deps"
       "polylith.clj.core.deps.text-table.shared"
       "polylith.clj.core.text-table.interface"
       "polylith.clj.core.util.interface.color"]}
     {:name "text-table.shared",
      :namespace "polylith.clj.core.deps.text-table.shared",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deps/src/polylith/clj/core/deps/text_table/shared.clj",
      :imports
      ["polylith.clj.core.text-table.interface"
       "polylith.clj.core.util.interface.color"]}
     {:name "text-table.workspace-deps-table",
      :namespace
      "polylith.clj.core.deps.text-table.workspace-deps-table",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deps/src/polylith/clj/core/deps/text_table/workspace_deps_table.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.text-table.interface"
       "polylith.clj.core.util.interface.color"]}
     {:name "text-table.brick-deps-table",
      :namespace "polylith.clj.core.deps.text-table.brick-deps-table",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deps/src/polylith/clj/core/deps/text_table/brick_deps_table.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.deps.text-table.shared"
       "polylith.clj.core.text-table.interface"]}
     {:name "project-brick-deps",
      :namespace "polylith.clj.core.deps.project-brick-deps",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deps/src/polylith/clj/core/deps/project_brick_deps.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "polylith.clj.core.common.interface"]}
     {:name "interface-deps",
      :namespace "polylith.clj.core.deps.interface-deps",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deps/src/polylith/clj/core/deps/interface_deps.clj",
      :imports ["clojure.string" "polylith.clj.core.common.interface"]}
     {:name "brick-deps",
      :namespace "polylith.clj.core.deps.brick-deps",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deps/src/polylith/clj/core/deps/brick_deps.clj",
      :imports ["clojure.set"]}],
    :test
    [{:name "interface-deps-test",
      :namespace "polylith.clj.core.deps.interface-deps-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deps/test/polylith/clj/core/deps/interface_deps_test.clj",
      :imports
      ["clojure.test" "polylith.clj.core.deps.interface-deps"]}
     {:name "text-table.data.usermanager",
      :namespace "polylith.clj.core.deps.text-table.data.usermanager",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deps/test/polylith/clj/core/deps/text_table/data/usermanager.clj",
      :imports ["clojure.test" "polylith.clj.core.common.interface"]}
     {:name "text-table.brick-ifc-deps-table-test",
      :namespace
      "polylith.clj.core.deps.text-table.brick-ifc-deps-table-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deps/test/polylith/clj/core/deps/text_table/brick_ifc_deps_table_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.deps.text-table.brick-deps-table"
       "polylith.clj.core.deps.text-table.data.usermanager"]}
     {:name "text-table.workspace-ifc-deps-table-test",
      :namespace
      "polylith.clj.core.deps.text-table.workspace-ifc-deps-table-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deps/test/polylith/clj/core/deps/text_table/workspace_ifc_deps_table_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.deps.text-table.data.usermanager"
       "polylith.clj.core.deps.text-table.workspace-deps-table"]}
     {:name "text-table.workspace-project-deps-table-test",
      :namespace
      "polylith.clj.core.deps.text-table.workspace-project-deps-table-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/deps/test/polylith/clj/core/deps/text_table/workspace_project_deps_table_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.deps.text-table.data.usermanager"
       "polylith.clj.core.deps.text-table.project-deps-table"]}]},
   :lib-imports
   {:src ["clojure.set" "clojure.string" "clojure.tools.deps.alpha"],
    :test ["clojure.test"]},
   :name "deps",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps
   {:src ["common" "text-table" "util"], :test ["common"]},
   :lib-deps
   {:src
    {"org.clojure/tools.deps.alpha"
     {:version "0.12.1003", :type "maven", :size 60953}}}}
  {:lines-of-code {:src 238, :test 2},
   :interface
   {:name "file",
    :definitions
    [{:name "sep", :type "data"}
     {:name "absolute-path",
      :type "function",
      :parameters [{:name "path"}]}
     {:name "copy-dir",
      :type "function",
      :parameters [{:name "from"} {:name "to"}]}
     {:name "copy-file",
      :type "function",
      :parameters [{:name "from"} {:name "to"}]}
     {:name "copy-file+",
      :type "function",
      :parameters [{:name "from"} {:name "to"}]}
     {:name "copy-file-or-dir+",
      :type "function",
      :parameters [{:name "from"} {:name "to"}]}
     {:name "copy-resource-file!",
      :type "function",
      :parameters [{:name "source"} {:name "target-path"}]}
     {:name "create-dir",
      :type "function",
      :parameters [{:name "path", :type "^String"}]}
     {:name "create-file",
      :type "function",
      :parameters [{:name "path"} {:name "rows"}]}
     {:name "create-missing-dirs",
      :type "function",
      :parameters [{:name "filename"}]}
     {:name "create-temp-dir",
      :type "function",
      :parameters [{:name "dir"}]}
     {:name "current-dir", :type "function", :parameters []}
     {:name "delete-dir",
      :type "function",
      :parameters [{:name "path"}]}
     {:name "delete-file",
      :type "function",
      :parameters [{:name "path"}]}
     {:name "directories",
      :type "function",
      :parameters [{:name "dir"}]}
     {:name "directory?",
      :type "function",
      :parameters [{:name "file", :type "^File"}]}
     {:name "exists", :type "function", :parameters [{:name "path"}]}
     {:name "file",
      :type "function",
      :parameters [{:name "f", :type "^String"}]}
     {:name "file-name",
      :type "function",
      :parameters [{:name "file", :type "^File"}]}
     {:name "files", :type "function", :parameters [{:name "dir"}]}
     {:name "files-and-dirs",
      :type "function",
      :parameters [{:name "dir"}]}
     {:name "files-recursively",
      :type "function",
      :parameters [{:name "dir"}]}
     {:name "lines-of-code",
      :type "function",
      :parameters [{:name "file-path"}]}
     {:name "paths-recursively",
      :type "function",
      :parameters [{:name "dir"}]}
     {:name "pretty-spit",
      :type "function",
      :parameters [{:name "filename"} {:name "collection"}]}
     {:name "read-deps-file",
      :type "function",
      :parameters [{:name "path"}]}
     {:name "read-file",
      :type "function",
      :parameters [{:name "path"}]}
     {:name "relative-paths",
      :type "function",
      :parameters [{:name "path"}]}
     {:name "size", :type "function", :parameters [{:name "path"}]}]},
   :namespaces
   {:src
    [{:name "interface",
      :namespace "polylith.clj.core.file.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/file/src/polylith/clj/core/file/interface.clj",
      :imports
      ["java.io" "me.raynes.fs" "polylith.clj.core.file.core"]}
     {:name "core",
      :namespace "polylith.clj.core.file.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/file/src/polylith/clj/core/file/core.clj",
      :imports
      ["clojure.java.io"
       "clojure.pprint"
       "clojure.string"
       "clojure.tools.deps.alpha"
       "java.io"
       "java.nio.file"
       "me.raynes.fs"
       "polylith.clj.core.util.interface.str"]}],
    :test
    [{:name "core-test",
      :namespace "polylith.clj.core.file.core-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/file/test/polylith/clj/core/file/core_test.clj",
      :imports ["clojure.test"]}]},
   :lib-imports
   {:src
    ["clojure.java.io"
     "clojure.pprint"
     "clojure.string"
     "clojure.tools.deps.alpha"
     "java.io"
     "java.nio.file"
     "me.raynes.fs"],
    :test ["clojure.test"]},
   :name "file",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps {:src ["util"], :test []},
   :lib-deps
   {:src
    {"clj-commons/fs" {:version "1.6.310", :type "maven", :size 12819},
     "org.clojure/tools.deps.alpha"
     {:version "0.12.1003", :type "maven", :size 60953}}}}
  {:lines-of-code {:src 176, :test 13},
   :interface
   {:name "git",
    :definitions
    [{:name "branch", :type "data"}
     {:name "repo", :type "data"}
     {:name "add",
      :type "function",
      :parameters [{:name "ws-dir"} {:name "filename"}]}
     {:name "add",
      :type "function",
      :parameters
      [{:name "ws-dir"} {:name "filename"} {:name "is-git-add"}]}
     {:name "current-branch", :type "function", :parameters []}
     {:name "diff",
      :type "function",
      :parameters
      [{:name "ws-dir"}
       {:name "ws-local-dir"}
       {:name "is-no-changes"}
       {:name "sha1"}
       {:name "sha2"}]}
     {:name "diff-command",
      :type "function",
      :parameters [{:name "sha1"} {:name "sha2"}]}
     {:name "init",
      :type "function",
      :parameters
      [{:name "ws-dir"} {:name "git-repo?"} {:name "branch"}]}
     {:name "is-git-repo?",
      :type "function",
      :parameters [{:name "ws-dir"}]}
     {:name "latest-polylith-sha",
      :type "function",
      :parameters [{:name "branch"}]}
     {:name "root-dir", :type "function", :parameters []}
     {:name "sha",
      :type "function",
      :parameters
      [{:name "ws-dir"} {:name "since"} {:name "tag-patterns"}]}]},
   :namespaces
   {:src
    [{:name "tag",
      :namespace "polylith.clj.core.git.tag",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/git/src/polylith/clj/core/git/tag.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.sh.interface"
       "polylith.clj.core.util.interface.str"]}
     {:name "interface",
      :namespace "polylith.clj.core.git.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/git/src/polylith/clj/core/git/interface.clj",
      :imports ["polylith.clj.core.git.core"]}
     {:name "core",
      :namespace "polylith.clj.core.git.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/git/src/polylith/clj/core/git/core.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.git.tag"
       "polylith.clj.core.sh.interface"]}],
    :test
    [{:name "interface-test",
      :namespace "polylith.clj.core.git.interface-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/git/test/polylith/clj/core/git/interface_test.clj",
      :imports ["clojure.test" "polylith.clj.core.git.interface"]}]},
   :lib-imports {:src ["clojure.string"], :test ["clojure.test"]},
   :name "git",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps {:src ["sh" "util"], :test []},
   :lib-deps {}}
  {:lines-of-code {:src 1033, :test 0},
   :interface
   {:name "help",
    :definitions
    [{:name "print-help",
      :type "function",
      :parameters
      [{:name "shell?"}
       {:name "cmd"}
       {:name "ent"}
       {:name "is-all"}
       {:name "is-show-project"}
       {:name "is-show-brick"}
       {:name "is-show-workspace"}
       {:name "toolsdeps1?"}
       {:name "color-mode"}]}]},
   :namespaces
   {:src
    [{:name "create",
      :namespace "polylith.clj.core.help.create",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/create.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.help.create-base"
       "polylith.clj.core.help.create-component"
       "polylith.clj.core.help.create-project"
       "polylith.clj.core.help.create-workspace"
       "polylith.clj.core.help.shared"]}
     {:name "deps-brick",
      :namespace "polylith.clj.core.help.deps-brick",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/deps_brick.clj",
      :imports
      ["polylith.clj.core.help.shared"
       "polylith.clj.core.util.interface.color"]}
     {:name "migrate",
      :namespace "polylith.clj.core.help.migrate",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/migrate.clj",
      :imports []}
     {:name "deps-project",
      :namespace "polylith.clj.core.help.deps-project",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/deps_project.clj",
      :imports
      ["polylith.clj.core.help.shared"
       "polylith.clj.core.util.interface.color"]}
     {:name "interface",
      :namespace "polylith.clj.core.help.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/interface.clj",
      :imports ["polylith.clj.core.help.core"]}
     {:name "shell",
      :namespace "polylith.clj.core.help.shell",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/shell.clj",
      :imports []}
     {:name "deps-workspace",
      :namespace "polylith.clj.core.help.deps-workspace",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/deps_workspace.clj",
      :imports ["polylith.clj.core.util.interface.color"]}
     {:name "create-component",
      :namespace "polylith.clj.core.help.create-component",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/create_component.clj",
      :imports ["polylith.clj.core.help.shared"]}
     {:name "deps",
      :namespace "polylith.clj.core.help.deps",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/deps.clj",
      :imports
      ["polylith.clj.core.help.deps-brick"
       "polylith.clj.core.help.deps-brick-project"
       "polylith.clj.core.help.deps-project"
       "polylith.clj.core.help.deps-workspace"
       "polylith.clj.core.help.shared"]}
     {:name "diff",
      :namespace "polylith.clj.core.help.diff",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/diff.clj",
      :imports ["polylith.clj.core.util.interface.color"]}
     {:name "check",
      :namespace "polylith.clj.core.help.check",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/check.clj",
      :imports
      ["polylith.clj.core.help.shared"
       "polylith.clj.core.util.interface.color"]}
     {:name "info",
      :namespace "polylith.clj.core.help.info",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/info.clj",
      :imports
      ["polylith.clj.core.help.shared"
       "polylith.clj.core.help.shared"
       "polylith.clj.core.util.interface.color"]}
     {:name "shared",
      :namespace "polylith.clj.core.help.shared",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/shared.clj",
      :imports
      ["clojure.string" "polylith.clj.core.util.interface.color"]}
     {:name "create-workspace",
      :namespace "polylith.clj.core.help.create-workspace",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/create_workspace.clj",
      :imports ["polylith.clj.core.help.shared"]}
     {:name "core",
      :namespace "polylith.clj.core.help.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/core.clj",
      :imports
      ["polylith.clj.core.help.check"
       "polylith.clj.core.help.create"
       "polylith.clj.core.help.deps"
       "polylith.clj.core.help.diff"
       "polylith.clj.core.help.info"
       "polylith.clj.core.help.libs"
       "polylith.clj.core.help.migrate"
       "polylith.clj.core.help.shell"
       "polylith.clj.core.help.summary"
       "polylith.clj.core.help.test"
       "polylith.clj.core.help.ws"]}
     {:name "ws",
      :namespace "polylith.clj.core.help.ws",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/ws.clj",
      :imports ["polylith.clj.core.help.shared"]}
     {:name "create-project",
      :namespace "polylith.clj.core.help.create-project",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/create_project.clj",
      :imports ["polylith.clj.core.help.shared"]}
     {:name "summary",
      :namespace "polylith.clj.core.help.summary",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/summary.clj",
      :imports
      ["polylith.clj.core.help.shared"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.version.interface"]}
     {:name "create-base",
      :namespace "polylith.clj.core.help.create-base",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/create_base.clj",
      :imports ["polylith.clj.core.help.shared"]}
     {:name "libs",
      :namespace "polylith.clj.core.help.libs",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/libs.clj",
      :imports
      ["polylith.clj.core.help.shared"
       "polylith.clj.core.util.interface.color"]}
     {:name "deps-brick-project",
      :namespace "polylith.clj.core.help.deps-brick-project",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/deps_brick_project.clj",
      :imports
      ["polylith.clj.core.help.shared"
       "polylith.clj.core.util.interface.color"]}
     {:name "test",
      :namespace "polylith.clj.core.help.test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/help/src/polylith/clj/core/help/test.clj",
      :imports
      ["polylith.clj.core.help.shared"
       "polylith.clj.core.util.interface.color"]}]},
   :lib-imports {:src ["clojure.string"]},
   :name "help",
   :paths {:src ["src"], :test []},
   :type "component",
   :interface-deps {:src ["common" "util" "version"], :test []},
   :lib-deps {}}
  {:lines-of-code {:src 375, :test 200},
   :interface
   {:name "lib",
    :definitions
    [{:name "brick-lib-deps",
      :type "function",
      :parameters
      [{:name "ws-dir"}
       {:name "ws-type"}
       {:name "config"}
       {:name "top-namespace"}
       {:name "ns-to-lib"}
       {:name "namespaces"}
       {:name "entity-root-path"}
       {:name "user-home"}]}
     {:name "latest-with-sizes",
      :type "function",
      :parameters
      [{:name "ws-dir"}
       {:name "entity-root-path"}
       {:name "libraries"}
       {:name "user-home"}]}
     {:name "print-lib-table",
      :type "function",
      :parameters [{:name "workspace"} {:name "is-all"}]}
     {:name "resolve-libs",
      :type "function",
      :parameters [{:name "src-deps"} {:name "override-deps"}]}
     {:name "with-sizes-vec",
      :type "function",
      :parameters
      [{:name "ws-dir"}
       {:name "entity-root-path"}
       {:name "libraries"}
       {:name "user-home"}]}]},
   :namespaces
   {:src
    [{:name "ns-to-lib",
      :namespace "polylith.clj.core.lib.ns-to-lib",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/lib/src/polylith/clj/core/lib/ns_to_lib.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.lib.size"
       "polylith.clj.core.util.interface"]}
     {:name "interface",
      :namespace "polylith.clj.core.lib.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/lib/src/polylith/clj/core/lib/interface.clj",
      :imports
      ["polylith.clj.core.lib.core"
       "polylith.clj.core.lib.resolve-libs"
       "polylith.clj.core.lib.size"
       "polylith.clj.core.lib.text-table.lib-table"]}
     {:name "git-size",
      :namespace "polylith.clj.core.lib.git-size",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/lib/src/polylith/clj/core/lib/git_size.clj",
      :imports ["polylith.clj.core.file.interface"]}
     {:name "local-size",
      :namespace "polylith.clj.core.lib.local-size",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/lib/src/polylith/clj/core/lib/local_size.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.lib.version"]}
     {:name "resolve-libs",
      :namespace "polylith.clj.core.lib.resolve-libs",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/lib/src/polylith/clj/core/lib/resolve_libs.clj",
      :imports ["polylith.clj.core.lib.maven-dep"]}
     {:name "size",
      :namespace "polylith.clj.core.lib.size",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/lib/src/polylith/clj/core/lib/size.clj",
      :imports
      ["polylith.clj.core.lib.git-size"
       "polylith.clj.core.lib.local-size"
       "polylith.clj.core.lib.mvn-size"]}
     {:name "text-table.lib-table",
      :namespace "polylith.clj.core.lib.text-table.lib-table",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/lib/src/polylith/clj/core/lib/text_table/lib_table.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.text-table.interface"
       "polylith.clj.core.util.interface.str"]}
     {:name "core",
      :namespace "polylith.clj.core.lib.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/lib/src/polylith/clj/core/lib/core.clj",
      :imports
      ["polylith.clj.core.file.interface"
       "polylith.clj.core.lib.maven-dep"
       "polylith.clj.core.lib.ns-to-lib"
       "polylith.clj.core.lib.size"
       "polylith.clj.core.util.interface"]}
     {:name "maven-dep",
      :namespace "polylith.clj.core.lib.maven-dep",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/lib/src/polylith/clj/core/lib/maven_dep.clj",
      :imports ["org.eclipse.aether.util.version"]}
     {:name "mvn-size",
      :namespace "polylith.clj.core.lib.mvn-size",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/lib/src/polylith/clj/core/lib/mvn_size.clj",
      :imports
      ["clojure.string"
       "clojure.walk"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.user-config.interface"]}
     {:name "version",
      :namespace "polylith.clj.core.lib.version",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/lib/src/polylith/clj/core/lib/version.clj",
      :imports
      ["clojure.string" "polylith.clj.core.util.interface.str"]}],
    :test
    [{:name "resolve-libs-test",
      :namespace "polylith.clj.core.lib.resolve-libs-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/lib/test/polylith/clj/core/lib/resolve_libs_test.clj",
      :imports ["clojure.test" "polylith.clj.core.lib.resolve-libs"]}
     {:name "version-test",
      :namespace "polylith.clj.core.lib.version-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/lib/test/polylith/clj/core/lib/version_test.clj",
      :imports ["clojure.test" "polylith.clj.core.lib.version"]}
     {:name "text-table.lib-table-test",
      :namespace "polylith.clj.core.lib.text-table.lib-table-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/lib/test/polylith/clj/core/lib/text_table/lib_table_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.lib.text-table.lib-table"
       "polylith.clj.core.test-helper.interfaces.data"]}]},
   :lib-imports
   {:src
    ["clojure.string"
     "clojure.walk"
     "org.eclipse.aether.util.version"],
    :test ["clojure.test"]},
   :name "lib",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps
   {:src ["common" "file" "text-table" "user-config" "util"],
    :test ["test-helper"]},
   :lib-deps {}}
  {:lines-of-code {:src 186, :test 2},
   :interface
   {:name "migrator",
    :definitions
    [{:name "migrate",
      :type "function",
      :parameters [{:name "ws-dir"} {:name "workspace"}]}]},
   :namespaces
   {:src
    [{:name "interface",
      :namespace "polylith.clj.core.migrator.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/migrator/src/polylith/clj/core/migrator/interface.clj",
      :imports ["polylith.clj.core.migrator.core"]}
     {:name "shared",
      :namespace "polylith.clj.core.migrator.shared",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/migrator/src/polylith/clj/core/migrator/shared.clj",
      :imports
      ["clojure.lang" "clojure.walk" "java.util" "zprint.core"]}
     {:name "workspace-deps",
      :namespace "polylith.clj.core.migrator.workspace-deps",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/migrator/src/polylith/clj/core/migrator/workspace_deps.clj",
      :imports ["polylith.clj.core.migrator.shared"]}
     {:name "project-deps",
      :namespace "polylith.clj.core.migrator.project-deps",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/migrator/src/polylith/clj/core/migrator/project_deps.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.migrator.shared"]}
     {:name "core",
      :namespace "polylith.clj.core.migrator.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/migrator/src/polylith/clj/core/migrator/core.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.migrator.brick-deps"
       "polylith.clj.core.migrator.project-deps"
       "polylith.clj.core.migrator.workspace-deps"]}
     {:name "brick-deps",
      :namespace "polylith.clj.core.migrator.brick-deps",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/migrator/src/polylith/clj/core/migrator/brick_deps.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.migrator.shared"]}],
    :test
    [{:name "interface-test",
      :namespace "polylith.clj.core.migrator.interface-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/migrator/test/polylith/clj/core/migrator/interface_test.clj",
      :imports ["clojure.test"]}]},
   :lib-imports
   {:src
    ["clojure.lang"
     "clojure.set"
     "clojure.string"
     "clojure.walk"
     "java.util"
     "zprint.core"],
    :test ["clojure.test"]},
   :name "migrator",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps {:src ["common" "file"], :test []},
   :lib-deps
   {:src
    {"zprint/zprint" {:version "1.1.2", :type "maven", :size 168772}}}}
  {:lines-of-code {:src 305, :test 400},
   :interface
   {:name "path-finder",
    :definitions
    [{:name "paths",
      :type "function",
      :parameters
      [{:name "ws-dir"}
       {:name "projects"}
       {:name "profile-to-settings"}]}
     {:name "=name",
      :type "function",
      :parameters [{:name "entity-name"}],
      :sub-ns "criterias"}
     {:name "base?",
      :type "function",
      :parameters [{:name "{:keys [type]}"}],
      :sub-ns "criterias"}
     {:name "brick?",
      :type "function",
      :parameters [{:name "{:keys [type]}"}],
      :sub-ns "criterias"}
     {:name "component?",
      :type "function",
      :parameters [{:name "{:keys [type]}"}],
      :sub-ns "criterias"}
     {:name "exists?",
      :type "function",
      :parameters [{:name "{:keys [exists?]}"}],
      :sub-ns "criterias"}
     {:name "filter-entries",
      :type "function",
      :parameters [{:name "path-entries"} {:name "criterias"}],
      :sub-ns "criterias"}
     {:name "has-entry?",
      :type "function",
      :parameters [{:name "path-entries"} {:name "criterias"}],
      :sub-ns "criterias"}
     {:name "match?",
      :type "function",
      :parameters [{:name "path-entry"} {:name "criterias"}],
      :sub-ns "criterias"}
     {:name "not-exists?",
      :type "function",
      :parameters [{:name "{:keys [exists?]}"}],
      :sub-ns "criterias"}
     {:name "not-profile?",
      :type "function",
      :parameters [{:name "{:keys [profile?]}"}],
      :sub-ns "criterias"}
     {:name "not-test-or-resources-path",
      :type "function",
      :parameters [{:name "entry"}],
      :sub-ns "criterias"}
     {:name "profile?",
      :type "function",
      :parameters [{:name "{:keys [profile?]}"}],
      :sub-ns "criterias"}
     {:name "project?",
      :type "function",
      :parameters [{:name "{:keys [type]}"}],
      :sub-ns "criterias"}
     {:name "resources-path?",
      :type "function",
      :parameters [{:name "{:keys [path]}"}],
      :sub-ns "criterias"}
     {:name "src-path?",
      :type "function",
      :parameters [{:name "{:keys [path]}"}],
      :sub-ns "criterias"}
     {:name "src?",
      :type "function",
      :parameters [{:name "{:keys [test?]}"}],
      :sub-ns "criterias"}
     {:name "test-path?",
      :type "function",
      :parameters [{:name "{:keys [path]}"}],
      :sub-ns "criterias"}
     {:name "test?",
      :type "function",
      :parameters [{:name "{:keys [test?]}"}],
      :sub-ns "criterias"}
     {:name "truthy",
      :type "function",
      :parameters [{:name "_"}],
      :sub-ns "criterias"}
     {:name "from-library-deps",
      :type "function",
      :parameters [{:name "is-dev"} {:name "deps"} {:name "settings"}],
      :sub-ns "extract"}
     {:name "from-paths",
      :type "function",
      :parameters [{:name "paths"} {:name "disk-paths"}],
      :sub-ns "extract"}
     {:name "from-profiles-paths",
      :type "function",
      :parameters
      [{:name "disk-paths"} {:name "settings"} {:name "profile-name"}],
      :sub-ns "extract"}
     {:name "from-unenriched-project",
      :type "function",
      :parameters
      [{:name "is-dev"}
       {:name "paths"}
       {:name "disk-paths"}
       {:name "settings"}],
      :sub-ns "extract"}
     {:name "entries",
      :type "function",
      :parameters
      [{:name "path-entries"} {:name "&"} {:name "criterias"}],
      :sub-ns "select"}
     {:name "exists?",
      :type "function",
      :parameters
      [{:name "path-entries"} {:name "&"} {:name "criterias"}],
      :sub-ns "select"}
     {:name "lib-deps",
      :type "function",
      :parameters
      [{:name "dep-entries"} {:name "&"} {:name "criterias"}],
      :sub-ns "select"}
     {:name "names",
      :type "function",
      :parameters
      [{:name "path-entries"} {:name "&"} {:name "criterias"}],
      :sub-ns "select"}
     {:name "paths",
      :type "function",
      :parameters
      [{:name "path-entries"} {:name "&"} {:name "criterias"}],
      :sub-ns "select"}
     {:name "brick-status-flags",
      :type "function",
      :parameters
      [{:name "path-entries"}
       {:name "brick-name"}
       {:name "is-show-resources"}],
      :sub-ns "status"}
     {:name "project-status-flags",
      :type "function",
      :parameters
      [{:name "path-entries"}
       {:name "project-name"}
       {:name "is-show-resources"}],
      :sub-ns "status"}]},
   :namespaces
   {:src
    [{:name "profile-src-splitter",
      :namespace "polylith.clj.core.path-finder.profile-src-splitter",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/src/polylith/clj/core/path_finder/profile_src_splitter.clj",
      :imports ["clojure.string"]}
     {:name "path-extractor",
      :namespace "polylith.clj.core.path-finder.path-extractor",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/src/polylith/clj/core/path_finder/path_extractor.clj",
      :imports
      ["polylith.clj.core.file.interface"
       "polylith.clj.core.path-finder.profile-src-splitter"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.util.interface.str"]}
     {:name "interface",
      :namespace "polylith.clj.core.path-finder.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/src/polylith/clj/core/path_finder/interface.clj",
      :imports ["polylith.clj.core.path-finder.paths"]}
     {:name "selector",
      :namespace "polylith.clj.core.path-finder.selector",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/src/polylith/clj/core/path_finder/selector.clj",
      :imports ["polylith.clj.core.path-finder.interface.criterias"]}
     {:name "paths",
      :namespace "polylith.clj.core.path-finder.paths",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/src/polylith/clj/core/path_finder/paths.clj",
      :imports
      ["clojure.set"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.path-finder.sources-on-disk"]}
     {:name "status-calculator",
      :namespace "polylith.clj.core.path-finder.status-calculator",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/src/polylith/clj/core/path_finder/status_calculator.clj",
      :imports ["polylith.clj.core.path-finder.interface.criterias"]}
     {:name "lib-dep-extractor",
      :namespace "polylith.clj.core.path-finder.lib-dep-extractor",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/src/polylith/clj/core/path_finder/lib_dep_extractor.clj",
      :imports ["polylith.clj.core.util.interface"]}
     {:name "interface.extract",
      :namespace "polylith.clj.core.path-finder.interface.extract",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/src/polylith/clj/core/path_finder/interface/extract.clj",
      :imports
      ["polylith.clj.core.path-finder.lib-dep-extractor"
       "polylith.clj.core.path-finder.path-extractor"]}
     {:name "interface.criterias",
      :namespace "polylith.clj.core.path-finder.interface.criterias",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/src/polylith/clj/core/path_finder/interface/criterias.clj",
      :imports ["clojure.string"]}
     {:name "interface.select",
      :namespace "polylith.clj.core.path-finder.interface.select",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/src/polylith/clj/core/path_finder/interface/select.clj",
      :imports ["polylith.clj.core.path-finder.selector"]}
     {:name "interface.status",
      :namespace "polylith.clj.core.path-finder.interface.status",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/src/polylith/clj/core/path_finder/interface/status.clj",
      :imports
      ["polylith.clj.core.path-finder.interface.criterias"
       "polylith.clj.core.path-finder.status-calculator"]}
     {:name "sources-on-disk",
      :namespace "polylith.clj.core.path-finder.sources-on-disk",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/src/polylith/clj/core/path_finder/sources_on_disk.clj",
      :imports ["polylith.clj.core.file.interface"]}],
    :test
    [{:name "splitter-test",
      :namespace "polylith.clj.core.path-finder.splitter-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/test/polylith/clj/core/path_finder/splitter_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.path-finder.profile-src-splitter"]}
     {:name "select-lib-deps-test",
      :namespace "polylith.clj.core.path-finder.select-lib-deps-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/test/polylith/clj/core/path_finder/select_lib_deps_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.path-finder.interface.criterias"
       "polylith.clj.core.path-finder.interface.select"
       "polylith.clj.core.path-finder.test-data"]}
     {:name "test-data",
      :namespace "polylith.clj.core.path-finder.test-data",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/test/polylith/clj/core/path_finder/test_data.clj",
      :imports ["clojure.test"]}
     {:name "lib-dep-extractor-test",
      :namespace
      "polylith.clj.core.path-finder.lib-dep-extractor-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/test/polylith/clj/core/path_finder/lib_dep_extractor_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.path-finder.lib-dep-extractor"
       "polylith.clj.core.path-finder.test-data"]}
     {:name "select-src-test",
      :namespace "polylith.clj.core.path-finder.select-src-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/test/polylith/clj/core/path_finder/select_src_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.path-finder.interface.criterias"
       "polylith.clj.core.path-finder.interface.select"
       "polylith.clj.core.path-finder.test-data"]}
     {:name "status-test",
      :namespace "polylith.clj.core.path-finder.status-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/test/polylith/clj/core/path_finder/status_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.path-finder.interface.status"
       "polylith.clj.core.path-finder.path-extractor"]}
     {:name "extract-path-entries-test",
      :namespace
      "polylith.clj.core.path-finder.extract-path-entries-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/path-finder/test/polylith/clj/core/path_finder/extract_path_entries_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.path-finder.interface.extract"
       "polylith.clj.core.path-finder.test-data"]}]},
   :lib-imports
   {:src ["clojure.set" "clojure.string"], :test ["clojure.test"]},
   :name "path-finder",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps {:src ["file" "util"], :test []},
   :lib-deps {}}
  {:lines-of-code {:src 32, :test 0},
   :interface
   {:name "sh",
    :definitions
    [{:name "execute",
      :type "function",
      :parameters [{:name "&"} {:name "args"}]}
     {:name "execute-ignore-exception",
      :type "function",
      :parameters [{:name "&"} {:name "args"}]}
     {:name "execute-with-return",
      :type "function",
      :parameters [{:name "&"} {:name "args"}]}]},
   :namespaces
   {:src
    [{:name "interface",
      :namespace "polylith.clj.core.sh.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/sh/src/polylith/clj/core/sh/interface.clj",
      :imports ["polylith.clj.core.sh.core"]}
     {:name "core",
      :namespace "polylith.clj.core.sh.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/sh/src/polylith/clj/core/sh/core.clj",
      :imports ["clojure.java.shell"]}]},
   :lib-imports {:src ["clojure.java.shell"]},
   :name "sh",
   :paths {:src ["src"], :test []},
   :type "component",
   :interface-deps {:src [], :test []},
   :lib-deps {}}
  {:lines-of-code {:src 1018, :test 61},
   :interface
   {:name "shell",
    :definitions
    [{:name "start",
      :type "function",
      :parameters
      [{:name "command-executor"}
       {:name "workspace"}
       {:name "color-mode"}]}]},
   :namespaces
   {:src
    [{:name "disk-selecter",
      :namespace "polylith.clj.core.shell.disk-selecter",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/src/polylith/clj/core/shell/disk_selecter.clj",
      :imports ["clojure.string" "polylith.clj.core.file.interface"]}
     {:name "interface",
      :namespace "polylith.clj.core.shell.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/src/polylith/clj/core/shell/interface.clj",
      :imports ["polylith.clj.core.shell.core"]}
     {:name "suggester.file",
      :namespace "polylith.clj.core.shell.suggester.file",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/src/polylith/clj/core/shell/suggester/file.clj",
      :imports ["polylith.clj.core.shell.disk-selecter"]}
     {:name "suggester.ws",
      :namespace "polylith.clj.core.shell.suggester.ws",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/src/polylith/clj/core/shell/suggester/ws.clj",
      :imports ["polylith.clj.core.ws-explorer.interface"]}
     {:name "old-completer.create",
      :namespace "polylith.clj.core.shell.old-completer.create",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/src/polylith/clj/core/shell/old_completer/create.clj",
      :imports ["polylith.clj.core.shell.shared"]}
     {:name "old-completer.deps",
      :namespace "polylith.clj.core.shell.old-completer.deps",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/src/polylith/clj/core/shell/old_completer/deps.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.shell.shared"]}
     {:name "old-completer.ws",
      :namespace "polylith.clj.core.shell.old-completer.ws",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/src/polylith/clj/core/shell/old_completer/ws.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.shell.shared"
       "polylith.clj.core.ws-explorer.interface"]}
     {:name "old-completer.help",
      :namespace "polylith.clj.core.shell.old-completer.help",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/src/polylith/clj/core/shell/old_completer/help.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "polylith.clj.core.shell.shared"]}
     {:name "shared",
      :namespace "polylith.clj.core.shell.shared",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/src/polylith/clj/core/shell/shared.clj",
      :imports []}
     {:name "core",
      :namespace "polylith.clj.core.shell.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/src/polylith/clj/core/shell/core.clj",
      :imports
      ["clojure.string"
       "org.jline.reader"
       "org.jline.reader"
       "org.jline.reader"
       "org.jline.reader"
       "org.jline.reader"
       "org.jline.reader"
       "org.jline.reader"
       "org.jline.reader"
       "org.jline.reader"
       "org.jline.reader"
       "org.jline.reader.impl"
       "org.jline.reader.impl"
       "org.jline.terminal"
       "polylith.clj.core.shell.candidate.engine"
       "polylith.clj.core.user-input.interface"
       "polylith.clj.core.util.interface.color"
       "portal.api"]}
     {:name "candidate.selectors",
      :namespace "polylith.clj.core.shell.candidate.selectors",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/src/polylith/clj/core/shell/candidate/selectors.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.shell.candidate.creators"]}
     {:name "candidate.engine",
      :namespace "polylith.clj.core.shell.candidate.engine",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/src/polylith/clj/core/shell/candidate/engine.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.shell.candidate.specification"]}
     {:name "candidate.creators",
      :namespace "polylith.clj.core.shell.candidate.creators",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/src/polylith/clj/core/shell/candidate/creators.clj",
      :imports []}
     {:name "candidate.helpers",
      :namespace "polylith.clj.core.shell.candidate.helpers",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/src/polylith/clj/core/shell/candidate/helpers.clj",
      :imports []}
     {:name "candidate.specification",
      :namespace "polylith.clj.core.shell.candidate.specification",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/src/polylith/clj/core/shell/candidate/specification.clj",
      :imports
      ["polylith.clj.core.shell.candidate.creators"
       "polylith.clj.core.shell.candidate.helpers"
       "polylith.clj.core.shell.candidate.selectors"]}
     {:name "suggester",
      :namespace "polylith.clj.core.shell.suggester",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/src/polylith/clj/core/shell/suggester.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "polylith.clj.core.shell.shared"
       "polylith.clj.core.shell.suggester.file"
       "polylith.clj.core.shell.suggester.ws"
       "polylith.clj.core.util.interface"]}],
    :test
    [{:name "completer-test",
      :namespace "polylith.clj.core.shell.completer-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/shell/test/polylith/clj/core/shell/completer_test.clj",
      :imports ["clojure.test" "polylith.clj.core.shell.suggester"]}]},
   :lib-imports
   {:src
    ["clojure.set"
     "clojure.string"
     "org.jline.reader"
     "org.jline.reader.impl"
     "org.jline.terminal"
     "portal.api"],
    :test ["clojure.test"]},
   :name "shell",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps
   {:src ["common" "file" "user-input" "util" "ws-explorer"],
    :test []},
   :lib-deps
   {:src
    {"com.github.polyfy/jline"
     {:version "3.20.0", :type "maven", :size 1006075},
     "djblue/portal"
     {:version "0.13.0", :type "maven", :size 617207}}}}
  {:lines-of-code {:src 270, :test 0},
   :interface
   {:name "test-helper",
    :definitions
    [{:name "content",
      :type "function",
      :parameters [{:name "dir"} {:name "filename"}]}
     {:name "execute-command",
      :type "function",
      :parameters [{:name "current-dir"} {:name "&"} {:name "args"}]}
     {:name "paths", :type "function", :parameters [{:name "dir"}]}
     {:name "root-dir", :type "function", :parameters []}
     {:name "test-setup-and-tear-down",
      :type "function",
      :parameters [{:name "function"}]}
     {:name "user-home", :type "function", :parameters []}]},
   :namespaces
   {:src
    [{:name "interfaces.data",
      :namespace "polylith.clj.core.test-helper.interfaces.data",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/test-helper/src/polylith/clj/core/test_helper/interfaces/data.clj",
      :imports ["polylith.clj.core.test-helper.workspace-01"]}
     {:name "interface",
      :namespace "polylith.clj.core.test-helper.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/test-helper/src/polylith/clj/core/test_helper/interface.clj",
      :imports ["polylith.clj.core.test-helper.core"]}
     {:name "core",
      :namespace "polylith.clj.core.test-helper.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/test-helper/src/polylith/clj/core/test_helper/core.clj",
      :imports
      ["clojure.pprint"
       "clojure.string"
       "polylith.clj.core.command.interface"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.user-config.interface"
       "polylith.clj.core.user-input.interface"]}
     {:name "workspace-01",
      :namespace "polylith.clj.core.test-helper.workspace-01",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/test-helper/src/polylith/clj/core/test_helper/workspace_01.clj",
      :imports []}]},
   :lib-imports {:src ["clojure.pprint" "clojure.string"]},
   :name "test-helper",
   :paths {:src ["src"], :test []},
   :type "component",
   :interface-deps
   {:src ["command" "file" "user-config" "user-input"], :test []},
   :lib-deps {}}
  {:lines-of-code {:src 166, :test 0},
   :interface
   {:name "test-runner",
    :definitions
    [{:name "run",
      :type "function",
      :parameters
      [{:name "workspace"}
       {:name "is-verbose"}
       {:name "color-mode"}]}]},
   :namespaces
   {:src
    [{:name "interface",
      :namespace "polylith.clj.core.test-runner.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/test-runner/src/polylith/clj/core/test_runner/interface.clj",
      :imports ["polylith.clj.core.test-runner.core"]}
     {:name "core",
      :namespace "polylith.clj.core.test-runner.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/test-runner/src/polylith/clj/core/test_runner/core.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.deps.interface"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.util.interface.str"
       "polylith.clj.core.util.interface.time"
       "polylith.clj.core.validator.interface"]}]},
   :lib-imports {:src ["clojure.set" "clojure.string"]},
   :name "test-runner",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps
   {:src ["common" "deps" "util" "validator"], :test []},
   :lib-deps {}}
  {:lines-of-code {:src 245, :test 0},
   :interface
   {:name "text-table",
    :definitions
    [{:name "cell",
      :type "function",
      :parameters [{:name "column"} {:name "value"}]}
     {:name "cell",
      :type "function",
      :parameters [{:name "column"} {:name "row"} {:name "value"}]}
     {:name "cell",
      :type "function",
      :parameters
      [{:name "column"} {:name "row"} {:name "value"} {:name "color"}]}
     {:name "cell",
      :type "function",
      :parameters
      [{:name "column"}
       {:name "row"}
       {:name "value"}
       {:name "color"}
       {:name "align"}]}
     {:name "cell",
      :type "function",
      :parameters
      [{:name "column"}
       {:name "row"}
       {:name "value"}
       {:name "color"}
       {:name "align"}
       {:name "orientation"}]}
     {:name "line",
      :type "function",
      :parameters [{:name "row"} {:name "cells"}]}
     {:name "merge-cells",
      :type "function",
      :parameters [{:name "&"} {:name "list-of-cells"}]}
     {:name "number-cell",
      :type "function",
      :parameters
      [{:name "column"}
       {:name "row"}
       {:name "number"}
       {:name "align"}
       {:name "thousand-separator"}]}
     {:name "print-table",
      :type "function",
      :parameters [{:name "table"}]}
     {:name "spaces",
      :type "function",
      :parameters
      [{:name "row"} {:name "column-nums"} {:name "spaces"}]}
     {:name "table",
      :type "function",
      :parameters
      [{:name "initial-spaces"}
       {:name "color-mode"}
       {:name "&"}
       {:name "cells-list"}]}]},
   :namespaces
   {:src
    [{:name "flipper",
      :namespace "polylith.clj.core.text-table.flipper",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/text-table/src/polylith/clj/core/text_table/flipper.clj",
      :imports
      ["polylith.clj.core.util.interface.color"
       "polylith.clj.core.util.interface.str"]}
     {:name "interface",
      :namespace "polylith.clj.core.text-table.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/text-table/src/polylith/clj/core/text_table/interface.clj",
      :imports
      ["polylith.clj.core.text-table.cell"
       "polylith.clj.core.text-table.core"
       "polylith.clj.core.text-table.line"
       "polylith.clj.core.text-table.merger"
       "polylith.clj.core.text-table.spaces"]}
     {:name "spaces",
      :namespace "polylith.clj.core.text-table.spaces",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/text-table/src/polylith/clj/core/text_table/spaces.clj",
      :imports []}
     {:name "core",
      :namespace "polylith.clj.core.text-table.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/text-table/src/polylith/clj/core/text_table/core.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.text-table.flipper"
       "polylith.clj.core.text-table.merger"
       "polylith.clj.core.text-table.table"]}
     {:name "table",
      :namespace "polylith.clj.core.text-table.table",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/text-table/src/polylith/clj/core/text_table/table.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.util.interface.str"]}
     {:name "line",
      :namespace "polylith.clj.core.text-table.line",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/text-table/src/polylith/clj/core/text_table/line.clj",
      :imports
      ["polylith.clj.core.util.interface.color"
       "polylith.clj.core.util.interface.str"]}
     {:name "merger",
      :namespace "polylith.clj.core.text-table.merger",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/text-table/src/polylith/clj/core/text_table/merger.clj",
      :imports []}
     {:name "cell",
      :namespace "polylith.clj.core.text-table.cell",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/text-table/src/polylith/clj/core/text_table/cell.clj",
      :imports ["polylith.clj.core.util.interface.str"]}]},
   :lib-imports {:src ["clojure.string"]},
   :name "text-table",
   :paths {:src ["src"], :test []},
   :type "component",
   :interface-deps {:src ["util"], :test []},
   :lib-deps {}}
  {:lines-of-code {:src 44, :test 0},
   :interface
   {:name "user-config",
    :definitions
    [{:name "color-mode", :type "function", :parameters []}
     {:name "empty-character", :type "function", :parameters []}
     {:name "home-dir", :type "function", :parameters []}
     {:name "m2-dir", :type "function", :parameters []}
     {:name "thousand-separator", :type "function", :parameters []}]},
   :namespaces
   {:src
    [{:name "interface",
      :namespace "polylith.clj.core.user-config.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/user-config/src/polylith/clj/core/user_config/interface.clj",
      :imports ["polylith.clj.core.user-config.core"]}
     {:name "core",
      :namespace "polylith.clj.core.user-config.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/user-config/src/polylith/clj/core/user_config/core.clj",
      :imports
      ["polylith.clj.core.file.interface"
       "polylith.clj.core.util.interface.str"]}]},
   :lib-imports {},
   :name "user-config",
   :paths {:src ["src"], :test []},
   :type "component",
   :interface-deps {:src ["file" "util"], :test []},
   :lib-deps {}}
  {:lines-of-code {:src 152, :test 88},
   :interface
   {:name "user-input",
    :definitions
    [{:name "extract-params",
      :type "function",
      :parameters [{:name "args"}]}]},
   :namespaces
   {:src
    [{:name "interface",
      :namespace "polylith.clj.core.user-input.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/user-input/src/polylith/clj/core/user_input/interface.clj",
      :imports ["polylith.clj.core.user-input.core"]}
     {:name "params",
      :namespace "polylith.clj.core.user-input.params",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/user-input/src/polylith/clj/core/user_input/params.clj",
      :imports ["clojure.string"]}
     {:name "core",
      :namespace "polylith.clj.core.user-input.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/user-input/src/polylith/clj/core/user_input/core.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.user-input.params"
       "polylith.clj.core.util.interface"]}],
    :test
    [{:name "interface-test",
      :namespace "polylith.clj.core.user-input.interface-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/user-input/test/polylith/clj/core/user_input/interface_test.clj",
      :imports
      ["clojure.test" "polylith.clj.core.user-input.interface"]}
     {:name "params-test",
      :namespace "polylith.clj.core.user-input.params-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/user-input/test/polylith/clj/core/user_input/params_test.clj",
      :imports
      ["clojure.test" "polylith.clj.core.user-input.params"]}]},
   :lib-imports {:src ["clojure.string"], :test ["clojure.test"]},
   :name "user-input",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps {:src ["util"], :test []},
   :lib-deps {}}
  {:lines-of-code {:src 388, :test 47},
   :interface
   {:name "util",
    :definitions
    [{:name "find-first",
      :type "function",
      :parameters [{:name "predicate"} {:name "sequence"}]}
     {:name "first-as-vector",
      :type "function",
      :parameters [{:name "vals"}]}
     {:name "ordered-map",
      :type "function",
      :parameters [{:name "&"} {:name "keyvals"}]}
     {:name "sort-map", :type "function", :parameters [{:name "m"}]}
     {:name "stringify-and-sort-map",
      :type "function",
      :parameters [{:name "m"}]}
     {:name "def-keys",
      :type "macro",
      :parameters [{:name "amap"} {:name "keys"}]}
     {:name "none", :type "data", :sub-ns "color"}
     {:name "base",
      :type "function",
      :parameters [{:name "name"} {:name "color-mode"}],
      :sub-ns "color"}
     {:name "blue",
      :type "function",
      :parameters
      [{:name "color-mode"} {:name "&"} {:name "messages"}],
      :sub-ns "color"}
     {:name "brick",
      :type "function",
      :parameters [{:name "type"} {:name "name"} {:name "color-mode"}],
      :sub-ns "color"}
     {:name "clean-colors",
      :type "function",
      :parameters [{:name "message"}],
      :sub-ns "color"}
     {:name "component",
      :type "function",
      :parameters [{:name "name"} {:name "color-mode"}],
      :sub-ns "color"}
     {:name "cyan",
      :type "function",
      :parameters
      [{:name "color-mode"} {:name "&"} {:name "messages"}],
      :sub-ns "color"}
     {:name "entity",
      :type "function",
      :parameters [{:name "type"} {:name "name"} {:name "color-mode"}],
      :sub-ns "color"}
     {:name "error",
      :type "function",
      :parameters
      [{:name "color-mode"} {:name "&"} {:name "messages"}],
      :sub-ns "color"}
     {:name "green",
      :type "function",
      :parameters
      [{:name "color-mode"} {:name "&"} {:name "messages"}],
      :sub-ns "color"}
     {:name "grey",
      :type "function",
      :parameters
      [{:name "color-mode"} {:name "&"} {:name "messages"}],
      :sub-ns "color"}
     {:name "interface",
      :type "function",
      :parameters [{:name "name"} {:name "color-mode"}],
      :sub-ns "color"}
     {:name "library",
      :type "function",
      :parameters [{:name "name"} {:name "color-mode"}],
      :sub-ns "color"}
     {:name "namespc",
      :type "function",
      :parameters [{:name "name"} {:name "color-mode"}],
      :sub-ns "color"}
     {:name "namespc",
      :type "function",
      :parameters
      [{:name "interface"} {:name "namespace"} {:name "color-mode"}],
      :sub-ns "color"}
     {:name "ok",
      :type "function",
      :parameters
      [{:name "color-mode"} {:name "&"} {:name "messages"}],
      :sub-ns "color"}
     {:name "path",
      :type "function",
      :parameters [{:name "path"} {:name "color-mode"}],
      :sub-ns "color"}
     {:name "profile",
      :type "function",
      :parameters [{:name "name"} {:name "color-mode"}],
      :sub-ns "color"}
     {:name "project",
      :type "function",
      :parameters [{:name "name"} {:name "color-mode"}],
      :sub-ns "color"}
     {:name "purple",
      :type "function",
      :parameters
      [{:name "color-mode"} {:name "&"} {:name "messages"}],
      :sub-ns "color"}
     {:name "red",
      :type "function",
      :parameters
      [{:name "color-mode"} {:name "&"} {:name "messages"}],
      :sub-ns "color"}
     {:name "warning",
      :type "function",
      :parameters
      [{:name "color-mode"} {:name "&"} {:name "messages"}],
      :sub-ns "color"}
     {:name "yellow",
      :type "function",
      :parameters
      [{:name "color-mode"} {:name "&"} {:name "messages"}],
      :sub-ns "color"}
     {:name "print-error-message",
      :type "function",
      :parameters [{:name "e"}],
      :sub-ns "exception"}
     {:name "print-exception",
      :type "function",
      :parameters [{:name "cmd"} {:name "e"}],
      :sub-ns "exception"}
     {:name "print-stacktrace",
      :type "function",
      :parameters [{:name "e"}],
      :sub-ns "exception"}
     {:name "windows?", :type "function", :parameters [], :sub-ns "os"}
     {:name "count-things",
      :type "function",
      :parameters [{:name "thing"} {:name "cnt"}],
      :sub-ns "str"}
     {:name "drop-last",
      :type "function",
      :parameters [{:name "n"} {:name "string"}],
      :sub-ns "str"}
     {:name "line",
      :type "function",
      :parameters [{:name "length"}],
      :sub-ns "str"}
     {:name "sep-1000",
      :type "function",
      :parameters [{:name "number"} {:name "sep"}],
      :sub-ns "str"}
     {:name "skip-if-ends-with",
      :type "function",
      :parameters [{:name "string"} {:name "ends-with"}],
      :sub-ns "str"}
     {:name "skip-prefix",
      :type "function",
      :parameters [{:name "string"} {:name "prefix"}],
      :sub-ns "str"}
     {:name "skip-suffix",
      :type "function",
      :parameters [{:name "string"} {:name "suffix"}],
      :sub-ns "str"}
     {:name "skip-suffixes",
      :type "function",
      :parameters [{:name "string"} {:name "suffixes"}],
      :sub-ns "str"}
     {:name "skip-until",
      :type "function",
      :parameters [{:name "string"} {:name "separator"}],
      :sub-ns "str"}
     {:name "spaces",
      :type "function",
      :parameters [{:name "n#spaces"}],
      :sub-ns "str"}
     {:name "take-until",
      :type "function",
      :parameters [{:name "string"} {:name "separator"}],
      :sub-ns "str"}
     {:name "current-time",
      :type "function",
      :parameters [],
      :sub-ns "time"}
     {:name "print-execution-time",
      :type "function",
      :parameters [{:name "start-time"}],
      :sub-ns "time"}]},
   :namespaces
   {:src
    [{:name "colorizer",
      :namespace "polylith.clj.core.util.colorizer",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/util/src/polylith/clj/core/util/colorizer.clj",
      :imports ["clojure.string"]}
     {:name "interface",
      :namespace "polylith.clj.core.util.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/util/src/polylith/clj/core/util/interface.clj",
      :imports ["polylith.clj.core.util.core"]}
     {:name "str",
      :namespace "polylith.clj.core.util.str",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/util/src/polylith/clj/core/util/str.clj",
      :imports ["clojure.string" "polylith.clj.core.util.core"]}
     {:name "time",
      :namespace "polylith.clj.core.util.time",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/util/src/polylith/clj/core/util/time.clj",
      :imports ["java.util"]}
     {:name "core",
      :namespace "polylith.clj.core.util.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/util/src/polylith/clj/core/util/core.clj",
      :imports []}
     {:name "os",
      :namespace "polylith.clj.core.util.os",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/util/src/polylith/clj/core/util/os.clj",
      :imports ["clojure.string"]}
     {:name "interface.str",
      :namespace "polylith.clj.core.util.interface.str",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/util/src/polylith/clj/core/util/interface/str.clj",
      :imports ["clojure.string" "polylith.clj.core.util.str"]}
     {:name "interface.time",
      :namespace "polylith.clj.core.util.interface.time",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/util/src/polylith/clj/core/util/interface/time.clj",
      :imports ["polylith.clj.core.util.time"]}
     {:name "interface.exception",
      :namespace "polylith.clj.core.util.interface.exception",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/util/src/polylith/clj/core/util/interface/exception.clj",
      :imports
      ["clojure.stacktrace" "polylith.clj.core.util.interface.color"]}
     {:name "interface.os",
      :namespace "polylith.clj.core.util.interface.os",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/util/src/polylith/clj/core/util/interface/os.clj",
      :imports ["polylith.clj.core.util.os"]}
     {:name "interface.color",
      :namespace "polylith.clj.core.util.interface.color",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/util/src/polylith/clj/core/util/interface/color.clj",
      :imports ["polylith.clj.core.util.colorizer"]}],
    :test
    [{:name "util-test",
      :namespace "polylith.clj.core.util.util-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/util/test/polylith/clj/core/util/util_test.clj",
      :imports ["clojure.test" "polylith.clj.core.util.interface"]}
     {:name "string-util-test",
      :namespace "polylith.clj.core.util.string-util-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/util/test/polylith/clj/core/util/string_util_test.clj",
      :imports
      ["clojure.test" "polylith.clj.core.util.interface.str"]}]},
   :lib-imports
   {:src ["clojure.stacktrace" "clojure.string" "java.util"],
    :test ["clojure.test"]},
   :name "util",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps {:src [], :test []},
   :lib-deps {}}
  {:lines-of-code {:src 659, :test 838},
   :interface
   {:name "validator",
    :definitions
    [{:name "has-errors?",
      :type "function",
      :parameters [{:name "messages"}]}
     {:name "print-messages",
      :type "function",
      :parameters [{:name "workspace"}]}
     {:name "validate-brick-config",
      :type "function",
      :parameters [{:name "config"}]}
     {:name "validate-project-deployable-config",
      :type "function",
      :parameters [{:name "ws-type"} {:name "config"}]}
     {:name "validate-project-dev-config",
      :type "function",
      :parameters [{:name "ws-type"} {:name "config"}]}
     {:name "validate-workspace-config",
      :type "function",
      :parameters [{:name "config"}]}
     {:name "validate-ws",
      :type "function",
      :parameters
      [{:name "suffixed-top-ns"}
       {:name "settings"}
       {:name "version"}
       {:name "paths"}
       {:name "interface-names"}
       {:name "interfaces"}
       {:name "components"}
       {:name "bases"}
       {:name "projects"}
       {:name "interface-ns"}
       {:name "user-input"}
       {:name "color-mode"}]}]},
   :namespaces
   {:src
    [{:name "m104-circular-deps",
      :namespace "polylith.clj.core.validator.m104-circular-deps",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/m104_circular_deps.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.util.interface.color"]}
     {:name "m105-illegal-name-sharing",
      :namespace
      "polylith.clj.core.validator.m105-illegal-name-sharing",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/m105_illegal_name_sharing.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.util.interface.color"]}
     {:name "m102-function-or-macro-is-defined-twice",
      :namespace
      "polylith.clj.core.validator.m102-function-or-macro-is-defined-twice",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/m102_function_or_macro_is_defined_twice.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.shared"]}
     {:name "m202-missing-paths",
      :namespace "polylith.clj.core.validator.m202-missing-paths",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/m202_missing_paths.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.util.interface.color"]}
     {:name "m201-mismatching-parameters",
      :namespace
      "polylith.clj.core.validator.m201-mismatching-parameters",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/m201_mismatching_parameters.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.shared"]}
     {:name "m203-path-exists-in-both-dev-and-profile",
      :namespace
      "polylith.clj.core.validator.m203-path-exists-in-both-dev-and-profile",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/m203_path_exists_in_both_dev_and_profile.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.util.interface.color"]}
     {:name "m204-lib-deps-exists-in-both-dev-and-profile",
      :namespace
      "polylith.clj.core.validator.m204-lib-deps-exists-in-both-dev-and-profile",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/m204_lib_deps_exists_in_both_dev_and_profile.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.util.interface.color"]}
     {:name "interface",
      :namespace "polylith.clj.core.validator.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/interface.clj",
      :imports
      ["polylith.clj.core.validator.core"
       "polylith.clj.core.validator.datashape.dispatcher"
       "polylith.clj.core.validator.datashape.toolsdeps2"
       "polylith.clj.core.validator.message-printer"]}
     {:name "m106-multiple-interface-occurrences",
      :namespace
      "polylith.clj.core.validator.m106-multiple-interface-occurrences",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/m106_multiple_interface_occurrences.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.util.interface.color"]}
     {:name "m101-illegal-namespace-deps",
      :namespace
      "polylith.clj.core.validator.m101-illegal-namespace-deps",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/m101_illegal_namespace_deps.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.deps.interface"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.util.interface.color"]}
     {:name "shared",
      :namespace "polylith.clj.core.validator.shared",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/shared.clj",
      :imports ["clojure.string"]}
     {:name "m108-project-with-multi-implementing-component",
      :namespace
      "polylith.clj.core.validator.m108-project-with-multi-implementing-component",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/m108_project_with_multi_implementing_component.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.path-finder.interface.criterias"
       "polylith.clj.core.path-finder.interface.extract"
       "polylith.clj.core.path-finder.interface.select"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.util.interface.color"]}
     {:name "m107-missing-componens-in-project",
      :namespace
      "polylith.clj.core.validator.m107-missing-componens-in-project",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/m107_missing_componens_in_project.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.shared"]}
     {:name "m103-missing-defs",
      :namespace "polylith.clj.core.validator.m103-missing-defs",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/m103_missing_defs.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.shared"]}
     {:name "datashape.dispatcher",
      :namespace "polylith.clj.core.validator.datashape.dispatcher",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/datashape/dispatcher.clj",
      :imports
      ["polylith.clj.core.validator.datashape.toolsdeps1"
       "polylith.clj.core.validator.datashape.toolsdeps2"]}
     {:name "datashape.toolsdeps1",
      :namespace "polylith.clj.core.validator.datashape.toolsdeps1",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/datashape/toolsdeps1.clj",
      :imports
      ["malli.core"
       "malli.error"
       "polylith.clj.core.validator.datashape.shared"]}
     {:name "datashape.toolsdeps2",
      :namespace "polylith.clj.core.validator.datashape.toolsdeps2",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/datashape/toolsdeps2.clj",
      :imports
      ["malli.core"
       "malli.error"
       "polylith.clj.core.validator.datashape.shared"]}
     {:name "datashape.shared",
      :namespace "polylith.clj.core.validator.datashape.shared",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/datashape/shared.clj",
      :imports ["malli.core" "malli.error"]}
     {:name "core",
      :namespace "polylith.clj.core.validator.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/core.clj",
      :imports
      ["polylith.clj.core.validator.m101-illegal-namespace-deps"
       "polylith.clj.core.validator.m102-function-or-macro-is-defined-twice"
       "polylith.clj.core.validator.m103-missing-defs"
       "polylith.clj.core.validator.m104-circular-deps"
       "polylith.clj.core.validator.m105-illegal-name-sharing"
       "polylith.clj.core.validator.m106-multiple-interface-occurrences"
       "polylith.clj.core.validator.m107-missing-componens-in-project"
       "polylith.clj.core.validator.m108-project-with-multi-implementing-component"
       "polylith.clj.core.validator.m201-mismatching-parameters"
       "polylith.clj.core.validator.m202-missing-paths"
       "polylith.clj.core.validator.m203-path-exists-in-both-dev-and-profile"
       "polylith.clj.core.validator.m204-lib-deps-exists-in-both-dev-and-profile"
       "polylith.clj.core.validator.m205-non-top-namespace"]}
     {:name "m205-non-top-namespace",
      :namespace "polylith.clj.core.validator.m205-non-top-namespace",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/m205_non_top_namespace.clj",
      :imports
      ["polylith.clj.core.util.interface"
       "polylith.clj.core.util.interface.color"]}
     {:name "message-printer",
      :namespace "polylith.clj.core.validator.message-printer",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/src/polylith/clj/core/validator/message_printer.clj",
      :imports
      ["clojure.string" "polylith.clj.core.util.interface.color"]}],
    :test
    [{:name "m102-function-or-macro-is-defined-twice-test",
      :namespace
      "polylith.clj.core.validator.m102-function-or-macro-is-defined-twice-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/test/polylith/clj/core/validator/m102_function_or_macro_is_defined_twice_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.m102-function-or-macro-is-defined-twice"]}
     {:name "m101-illegal-namespace-deps-test",
      :namespace
      "polylith.clj.core.validator.m101-illegal-namespace-deps-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/test/polylith/clj/core/validator/m101_illegal_namespace_deps_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.m101-illegal-namespace-deps"]}
     {:name "m108-project-with-multi-implementing-component-test",
      :namespace
      "polylith.clj.core.validator.m108-project-with-multi-implementing-component-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/test/polylith/clj/core/validator/m108_project_with_multi_implementing_component_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.m108-project-with-multi-implementing-component"]}
     {:name "m204-lib-deps-exists-in-both-dev-and-profile-test",
      :namespace
      "polylith.clj.core.validator.m204-lib-deps-exists-in-both-dev-and-profile-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/test/polylith/clj/core/validator/m204_lib_deps_exists_in_both_dev_and_profile_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.m204-lib-deps-exists-in-both-dev-and-profile"]}
     {:name "m105-illegal-name-sharing-test",
      :namespace
      "polylith.clj.core.validator.m105-illegal-name-sharing-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/test/polylith/clj/core/validator/m105_illegal_name_sharing_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.m105-illegal-name-sharing"]}
     {:name "m104-circular-deps-test",
      :namespace "polylith.clj.core.validator.m104-circular-deps-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/test/polylith/clj/core/validator/m104_circular_deps_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.m104-circular-deps"]}
     {:name "m202-missing-paths-test",
      :namespace "polylith.clj.core.validator.m202-missing-paths-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/test/polylith/clj/core/validator/m202_missing_paths_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.m202-missing-paths"]}
     {:name "datashape.toolsdeps2-project-deployable-config-test",
      :namespace
      "polylith.clj.core.validator.datashape.toolsdeps2-project-deployable-config-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/test/polylith/clj/core/validator/datashape/toolsdeps2_project_deployable_config_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.validator.datashape.toolsdeps2"]}
     {:name "datashape.toolsdeps1-project-deployable-config-test",
      :namespace
      "polylith.clj.core.validator.datashape.toolsdeps1-project-deployable-config-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/test/polylith/clj/core/validator/datashape/toolsdeps1_project_deployable_config_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.validator.datashape.toolsdeps1"]}
     {:name "m203-path-exists-in-both-dev-and-profile-test",
      :namespace
      "polylith.clj.core.validator.m203-path-exists-in-both-dev-and-profile-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/test/polylith/clj/core/validator/m203_path_exists_in_both_dev_and_profile_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.m203-path-exists-in-both-dev-and-profile"]}
     {:name "dev-config-test",
      :namespace "polylith.clj.core.validator.dev-config-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/test/polylith/clj/core/validator/dev_config_test.clj",
      :imports
      ["clojure.test" "polylith.clj.core.validator.interface"]}
     {:name "m106-multiple-interface-occurrences-test",
      :namespace
      "polylith.clj.core.validator.m106-multiple-interface-occurrences-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/test/polylith/clj/core/validator/m106_multiple_interface_occurrences_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.m106-multiple-interface-occurrences"]}
     {:name "m201-mismatching-parameters-test",
      :namespace
      "polylith.clj.core.validator.m201-mismatching-parameters-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/test/polylith/clj/core/validator/m201_mismatching_parameters_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.m201-mismatching-parameters"]}
     {:name "m103-missing-defs-test",
      :namespace "polylith.clj.core.validator.m103-missing-defs-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/test/polylith/clj/core/validator/m103_missing_defs_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.m103-missing-defs"]}
     {:name "m107-missing-componens-in-project-test",
      :namespace
      "polylith.clj.core.validator.m107-missing-componens-in-project-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/test/polylith/clj/core/validator/m107_missing_componens_in_project_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.m107-missing-componens-in-project"]}
     {:name "m205-non-top-namespace-test",
      :namespace
      "polylith.clj.core.validator.m205-non-top-namespace-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/validator/test/polylith/clj/core/validator/m205_non_top_namespace_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.m205-non-top-namespace"]}]},
   :lib-imports
   {:src ["clojure.set" "clojure.string" "malli.core" "malli.error"],
    :test ["clojure.test"]},
   :name "validator",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps
   {:src ["common" "deps" "path-finder" "util"], :test ["util"]},
   :lib-deps
   {:src
    {"metosin/malli" {:version "0.5.1", :type "maven", :size 43722}}}}
  {:lines-of-code {:src 28, :test 0},
   :interface
   {:name "version",
    :definitions
    [{:name "date", :type "data"}
     {:name "major", :type "data"}
     {:name "minor", :type "data"}
     {:name "name", :type "data"}
     {:name "patch", :type "data"}
     {:name "revision", :type "data"}
     {:name "version",
      :type "function",
      :parameters [{:name "ws-type"}]}
     {:name "version",
      :type "function",
      :parameters
      [{:name "{:keys [type], :as from-ws}"}
       {:name "from-release-name"}]}]},
   :namespaces
   {:src
    [{:name "interface",
      :namespace "polylith.clj.core.version.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/version/src/polylith/clj/core/version/interface.clj",
      :imports []}]},
   :lib-imports {},
   :name "version",
   :paths {:src ["src"], :test []},
   :type "component",
   :interface-deps {:src [], :test []},
   :lib-deps {}}
  {:lines-of-code {:src 585, :test 3014},
   :interface
   {:name "workspace",
    :definitions
    [{:name "enrich-workspace",
      :type "function",
      :parameters [{:name "workspace"}]}
     {:name "print-info",
      :type "function",
      :parameters [{:name "workspace"}]}]},
   :namespaces
   {:src
    [{:name "interface",
      :namespace "polylith.clj.core.workspace.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/interface.clj",
      :imports
      ["polylith.clj.core.workspace.core"
       "polylith.clj.core.workspace.text-table.info-tables"]}
     {:name "settings",
      :namespace "polylith.clj.core.workspace.settings",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/settings.clj",
      :imports ["clojure.set"]}
     {:name "lib-imports",
      :namespace "polylith.clj.core.workspace.lib-imports",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/lib_imports.clj",
      :imports ["clojure.string"]}
     {:name "loc",
      :namespace "polylith.clj.core.workspace.loc",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/loc.clj",
      :imports ["polylith.clj.core.file.interface"]}
     {:name "text-table.ws-table-column.project-columns",
      :namespace
      "polylith.clj.core.workspace.text-table.ws-table-column.project-columns",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/text_table/ws_table_column/project_columns.clj",
      :imports
      ["polylith.clj.core.path-finder.interface.criterias"
       "polylith.clj.core.path-finder.interface.extract"
       "polylith.clj.core.path-finder.interface.select"
       "polylith.clj.core.path-finder.interface.status"
       "polylith.clj.core.text-table.interface"]}
     {:name "text-table.ws-table-column.ifc-column",
      :namespace
      "polylith.clj.core.workspace.text-table.ws-table-column.ifc-column",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/text_table/ws_table_column/ifc_column.clj",
      :imports ["polylith.clj.core.text-table.interface"]}
     {:name "text-table.ws-table-column.profile-columns",
      :namespace
      "polylith.clj.core.workspace.text-table.ws-table-column.profile-columns",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/text_table/ws_table_column/profile_columns.clj",
      :imports
      ["polylith.clj.core.path-finder.interface.extract"
       "polylith.clj.core.path-finder.interface.status"
       "polylith.clj.core.text-table.interface"]}
     {:name "text-table.ws-table-column.loc-columns",
      :namespace
      "polylith.clj.core.workspace.text-table.ws-table-column.loc-columns",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/text_table/ws_table_column/loc_columns.clj",
      :imports ["polylith.clj.core.text-table.interface"]}
     {:name "text-table.ws-table-column.brick-column",
      :namespace
      "polylith.clj.core.workspace.text-table.ws-table-column.brick-column",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/text_table/ws_table_column/brick_column.clj",
      :imports
      ["polylith.clj.core.text-table.interface"
       "polylith.clj.core.util.interface.color"]}
     {:name "text-table.info-tables",
      :namespace "polylith.clj.core.workspace.text-table.info-tables",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/text_table/info_tables.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.interface"
       "polylith.clj.core.workspace.text-table.count-table"
       "polylith.clj.core.workspace.text-table.project-table"
       "polylith.clj.core.workspace.text-table.ws-table"]}
     {:name "text-table.ws-table",
      :namespace "polylith.clj.core.workspace.text-table.ws-table",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/text_table/ws_table.clj",
      :imports
      ["polylith.clj.core.text-table.interface"
       "polylith.clj.core.workspace.text-table.profile"
       "polylith.clj.core.workspace.text-table.ws-table-column.brick-column"
       "polylith.clj.core.workspace.text-table.ws-table-column.ifc-column"
       "polylith.clj.core.workspace.text-table.ws-table-column.loc-columns"
       "polylith.clj.core.workspace.text-table.ws-table-column.profile-columns"
       "polylith.clj.core.workspace.text-table.ws-table-column.project-columns"]}
     {:name "text-table.count-table",
      :namespace "polylith.clj.core.workspace.text-table.count-table",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/text_table/count_table.clj",
      :imports ["polylith.clj.core.text-table.interface"]}
     {:name "text-table.profile",
      :namespace "polylith.clj.core.workspace.text-table.profile",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/text_table/profile.clj",
      :imports []}
     {:name "text-table.project-table",
      :namespace
      "polylith.clj.core.workspace.text-table.project-table",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/text_table/project_table.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.path-finder.interface.extract"
       "polylith.clj.core.path-finder.interface.status"
       "polylith.clj.core.text-table.interface"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.workspace.text-table.profile"]}
     {:name "core",
      :namespace "polylith.clj.core.workspace.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/core.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.validator.interface"
       "polylith.clj.core.workspace.base"
       "polylith.clj.core.workspace.component"
       "polylith.clj.core.workspace.interfaces"
       "polylith.clj.core.workspace.project"
       "polylith.clj.core.workspace.settings"]}
     {:name "interfaces",
      :namespace "polylith.clj.core.workspace.interfaces",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/interfaces.clj",
      :imports []}
     {:name "base",
      :namespace "polylith.clj.core.workspace.base",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/base.clj",
      :imports
      ["polylith.clj.core.deps.interface"
       "polylith.clj.core.workspace.lib-imports"
       "polylith.clj.core.workspace.loc"]}
     {:name "component",
      :namespace "polylith.clj.core.workspace.component",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/component.clj",
      :imports
      ["polylith.clj.core.deps.interface"
       "polylith.clj.core.workspace.lib-imports"
       "polylith.clj.core.workspace.loc"]}
     {:name "project",
      :namespace "polylith.clj.core.workspace.project",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/src/polylith/clj/core/workspace/project.clj",
      :imports
      ["polylith.clj.core.deps.interface"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.path-finder.interface.criterias"
       "polylith.clj.core.path-finder.interface.extract"
       "polylith.clj.core.path-finder.interface.select"
       "polylith.clj.core.workspace.loc"]}],
    :test
    [{:name "project-test",
      :namespace "polylith.clj.core.workspace.project-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/test/polylith/clj/core/workspace/project_test.clj",
      :imports ["clojure.test" "polylith.clj.core.workspace.project"]}
     {:name "workspace-test",
      :namespace "polylith.clj.core.workspace.workspace-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/test/polylith/clj/core/workspace/workspace_test.clj",
      :imports
      ["clojure.string"
       "clojure.test"
       "polylith.clj.core.test-helper.interface"
       "polylith.clj.core.workspace.setup-workspace"]}
     {:name "lib-imports-test",
      :namespace "polylith.clj.core.workspace.lib-imports-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/test/polylith/clj/core/workspace/lib_imports_test.clj",
      :imports
      ["clojure.test" "polylith.clj.core.workspace.lib-imports"]}
     {:name "text-table.project-table-test",
      :namespace
      "polylith.clj.core.workspace.text-table.project-table-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/test/polylith/clj/core/workspace/text_table/project_table_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.workspace.text-table.project-table"]}
     {:name "text-table.ws-table-test",
      :namespace
      "polylith.clj.core.workspace.text-table.ws-table-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/test/polylith/clj/core/workspace/text_table/ws_table_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.workspace.text-table.ws-table"]}
     {:name "text-table.count-table-test",
      :namespace
      "polylith.clj.core.workspace.text-table.count-table-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/test/polylith/clj/core/workspace/text_table/count_table_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.workspace.text-table.count-table"]}
     {:name "settings-test",
      :namespace "polylith.clj.core.workspace.settings-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/test/polylith/clj/core/workspace/settings_test.clj",
      :imports ["clojure.test" "polylith.clj.core.workspace.settings"]}
     {:name "setup-workspace",
      :namespace "polylith.clj.core.workspace.setup-workspace",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace/test/polylith/clj/core/workspace/setup_workspace.clj",
      :imports
      ["clojure.java.shell"
       "clojure.test"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.test-helper.interface"]}]},
   :lib-imports
   {:src ["clojure.set" "clojure.string"],
    :test ["clojure.java.shell" "clojure.string" "clojure.test"]},
   :name "workspace",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps
   {:src
    ["common"
     "deps"
     "file"
     "path-finder"
     "text-table"
     "util"
     "validator"],
    :test ["file" "test-helper"]},
   :lib-deps {}}
  {:lines-of-code {:src 763, :test 129},
   :interface
   {:name "workspace-clj",
    :definitions
    [{:name "workspace-from-disk",
      :type "function",
      :parameters [{:name "user-input"}]}]},
   :namespaces
   {:src
    [{:name "config",
      :namespace "polylith.clj.core.workspace-clj.config",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/src/polylith/clj/core/workspace_clj/config.clj",
      :imports
      ["polylith.clj.core.file.interface"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.validator.interface"]}
     {:name "non-top-namespace",
      :namespace "polylith.clj.core.workspace-clj.non-top-namespace",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/src/polylith/clj/core/workspace_clj/non_top_namespace.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.util.interface.str"]}
     {:name "interface-defs-from-disk",
      :namespace
      "polylith.clj.core.workspace-clj.interface-defs-from-disk",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/src/polylith/clj/core/workspace_clj/interface_defs_from_disk.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.workspace-clj.definitions"]}
     {:name "interface",
      :namespace "polylith.clj.core.workspace-clj.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/src/polylith/clj/core/workspace_clj/interface.clj",
      :imports ["polylith.clj.core.workspace-clj.core"]}
     {:name "config-from-disk",
      :namespace "polylith.clj.core.workspace-clj.config-from-disk",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/src/polylith/clj/core/workspace_clj/config_from_disk.clj",
      :imports
      ["polylith.clj.core.file.interface"
       "polylith.clj.core.validator.interface"]}
     {:name "brick-paths",
      :namespace "polylith.clj.core.workspace-clj.brick-paths",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/src/polylith/clj/core/workspace_clj/brick_paths.clj",
      :imports ["polylith.clj.core.file.interface"]}
     {:name "project-settings",
      :namespace "polylith.clj.core.workspace-clj.project-settings",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/src/polylith/clj/core/workspace_clj/project_settings.clj",
      :imports []}
     {:name "core",
      :namespace "polylith.clj.core.workspace-clj.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/src/polylith/clj/core/workspace_clj/core.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.git.interface"
       "polylith.clj.core.path-finder.interface"
       "polylith.clj.core.user-config.interface"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.version.interface"
       "polylith.clj.core.workspace-clj.bases-from-disk"
       "polylith.clj.core.workspace-clj.components-from-disk"
       "polylith.clj.core.workspace-clj.config"
       "polylith.clj.core.workspace-clj.non-top-namespace"
       "polylith.clj.core.workspace-clj.profile"
       "polylith.clj.core.workspace-clj.project-settings"
       "polylith.clj.core.workspace-clj.projects-from-disk"
       "polylith.clj.core.workspace-clj.tag-pattern"
       "polylith.clj.core.workspace-clj.ws-reader"]}
     {:name "definitions",
      :namespace "polylith.clj.core.workspace-clj.definitions",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/src/polylith/clj/core/workspace_clj/definitions.clj",
      :imports ["clojure.string" "polylith.clj.core.util.interface"]}
     {:name "ws-reader",
      :namespace "polylith.clj.core.workspace-clj.ws-reader",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/src/polylith/clj/core/workspace_clj/ws_reader.clj",
      :imports []}
     {:name "namespaces-from-disk",
      :namespace
      "polylith.clj.core.workspace-clj.namespaces-from-disk",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/src/polylith/clj/core/workspace_clj/namespaces_from_disk.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.common.interface"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.util.interface.str"]}
     {:name "tag-pattern",
      :namespace "polylith.clj.core.workspace-clj.tag-pattern",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/src/polylith/clj/core/workspace_clj/tag_pattern.clj",
      :imports []}
     {:name "components-from-disk",
      :namespace
      "polylith.clj.core.workspace-clj.components-from-disk",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/src/polylith/clj/core/workspace_clj/components_from_disk.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.lib.interface"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.workspace-clj.brick-paths"
       "polylith.clj.core.workspace-clj.config-from-disk"
       "polylith.clj.core.workspace-clj.interface-defs-from-disk"
       "polylith.clj.core.workspace-clj.namespaces-from-disk"]}
     {:name "profile",
      :namespace "polylith.clj.core.workspace-clj.profile",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/src/polylith/clj/core/workspace_clj/profile.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.lib.interface"
       "polylith.clj.core.path-finder.interface.criterias"
       "polylith.clj.core.path-finder.interface.extract"
       "polylith.clj.core.path-finder.interface.select"
       "polylith.clj.core.util.interface"]}
     {:name "bases-from-disk",
      :namespace "polylith.clj.core.workspace-clj.bases-from-disk",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/src/polylith/clj/core/workspace_clj/bases_from_disk.clj",
      :imports
      ["polylith.clj.core.file.interface"
       "polylith.clj.core.lib.interface"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.workspace-clj.brick-paths"
       "polylith.clj.core.workspace-clj.config-from-disk"
       "polylith.clj.core.workspace-clj.namespaces-from-disk"]}
     {:name "projects-from-disk",
      :namespace "polylith.clj.core.workspace-clj.projects-from-disk",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/src/polylith/clj/core/workspace_clj/projects_from_disk.clj",
      :imports
      ["clojure.set"
       "clojure.string"
       "clojure.tools.deps.alpha.util.maven"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.lib.interface"
       "polylith.clj.core.util.interface"
       "polylith.clj.core.util.interface.str"
       "polylith.clj.core.validator.interface"
       "polylith.clj.core.workspace-clj.namespaces-from-disk"]}],
    :test
    [{:name "import-from-disk-test",
      :namespace
      "polylith.clj.core.workspace-clj.import-from-disk-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/test/polylith/clj/core/workspace_clj/import_from_disk_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.workspace-clj.namespaces-from-disk"]}
     {:name "readimportsfromdisk-test",
      :namespace
      "polylith.clj.core.workspace-clj.readimportsfromdisk-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/test/polylith/clj/core/workspace_clj/readimportsfromdisk_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.workspace-clj.namespaces-from-disk"]}
     {:name "non-top-namespace-test",
      :namespace
      "polylith.clj.core.workspace-clj.non-top-namespace-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/test/polylith/clj/core/workspace_clj/non_top_namespace_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.workspace-clj.non-top-namespace"]}
     {:name "definitions-test",
      :namespace "polylith.clj.core.workspace-clj.definitions-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/workspace-clj/test/polylith/clj/core/workspace_clj/definitions_test.clj",
      :imports
      ["clojure.test"
       "polylith.clj.core.workspace-clj.definitions"]}]},
   :lib-imports
   {:src
    ["clojure.set"
     "clojure.string"
     "clojure.tools.deps.alpha.util.maven"],
    :test ["clojure.test"]},
   :name "workspace-clj",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps
   {:src
    ["common"
     "file"
     "git"
     "lib"
     "path-finder"
     "user-config"
     "util"
     "validator"
     "version"],
    :test ["file"]},
   :lib-deps
   {:src
    {"org.clojure/tools.deps.alpha"
     {:version "0.12.1003", :type "maven", :size 60953}}}}
  {:lines-of-code {:src 125, :test 68},
   :interface
   {:name "ws-explorer",
    :definitions
    [{:name "extract",
      :type "function",
      :parameters [{:name "workspace"} {:name "get"}]}
     {:name "ws",
      :type "function",
      :parameters
      [{:name "workspace"}
       {:name "get"}
       {:name "out"}
       {:name "color-mode"}]}]},
   :namespaces
   {:src
    [{:name "interface",
      :namespace "polylith.clj.core.ws-explorer.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/ws-explorer/src/polylith/clj/core/ws_explorer/interface.clj",
      :imports ["polylith.clj.core.ws-explorer.core"]}
     {:name "core",
      :namespace "polylith.clj.core.ws-explorer.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/ws-explorer/src/polylith/clj/core/ws_explorer/core.clj",
      :imports
      ["clojure.pprint"
       "clojure.string"
       "clojure.walk"
       "polylith.clj.core.util.interface.color"
       "polylith.clj.core.util.interface.str"
       "puget.printer"]}],
    :test
    [{:name "interface-test",
      :namespace "polylith.clj.core.ws-explorer.interface-test",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/ws-explorer/test/polylith/clj/core/ws_explorer/interface_test.clj",
      :imports
      ["clojure.test" "polylith.clj.core.ws-explorer.interface"]}]},
   :lib-imports
   {:src
    ["clojure.pprint" "clojure.string" "clojure.walk" "puget.printer"],
    :test ["clojure.test"]},
   :name "ws-explorer",
   :paths {:src ["src"], :test ["test"]},
   :type "component",
   :interface-deps {:src ["util"], :test []},
   :lib-deps
   {:src
    {"mvxcvi/puget" {:version "1.3.1", :type "maven", :size 15930}}}}
  {:lines-of-code {:src 163, :test 0},
   :interface
   {:name "ws-file",
    :definitions
    [{:name "read-ws-from-file",
      :type "function",
      :parameters [{:name "ws-file"} {:name "user-input"}]}]},
   :namespaces
   {:src
    [{:name "interface",
      :namespace "polylith.clj.core.ws-file.interface",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/ws-file/src/polylith/clj/core/ws_file/interface.clj",
      :imports ["polylith.clj.core.ws-file.from-disk"]}
     {:name "from-1-to-2",
      :namespace "polylith.clj.core.ws-file.from-1-to-2",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/ws-file/src/polylith/clj/core/ws_file/from_1_to_2.clj",
      :imports
      ["polylith.clj.core.git.interface"
       "polylith.clj.core.version.interface"]}
     {:name "from-disk",
      :namespace "polylith.clj.core.ws-file.from-disk",
      :file-path
      "/Users/joakimtengstrand/source/polylith/components/ws-file/src/polylith/clj/core/ws_file/from_disk.clj",
      :imports
      ["polylith.clj.core.common.interface"
       "polylith.clj.core.file.interface"
       "polylith.clj.core.ws-file.from-1-to-2"]}]},
   :lib-imports {},
   :name "ws-file",
   :paths {:src ["src"], :test []},
   :type "component",
   :interface-deps {:src ["common" "file" "git" "version"], :test []},
   :lib-deps {}}],
 :changes
 {:since "stable",
  :since-sha "8835ad63e6e336ae98939e6467096f0146f5a89c",
  :since-tag "stable-master",
  :changed-files
  ["bases/poly-cli/src/polylith/clj/core/poly_cli/api.clj"
   "bases/poly-cli/src/polylith/clj/core/poly_cli/core.clj"
   "components/command/src/polylith/clj/core/command/cmd_validator/create.clj"
   "components/command/src/polylith/clj/core/command/cmd_validator/executable.clj"
   "components/command/src/polylith/clj/core/command/core.clj"
   "components/command/src/polylith/clj/core/command/create.clj"
   "components/command/src/polylith/clj/core/command/prompt.clj"
   "components/command/src/polylith/clj/core/command/shared.clj"
   "components/common/src/polylith/clj/core/common/class_loader.clj"
   "components/common/src/polylith/clj/core/common/core.clj"
   "components/common/src/polylith/clj/core/common/interface.clj"
   "components/creator/src/polylith/clj/core/creator/brick.clj"
   "components/creator/src/polylith/clj/core/creator/project.clj"
   "components/creator/test/polylith/clj/core/creator/component_test.clj"
   "components/creator/test/polylith/clj/core/creator/project_test.clj"
   "components/deployer/src/polylith/clj/core/deployer/core.clj"
   "components/deps/src/polylith/clj/core/deps/text_table/project_brick_deps_table.clj"
   "components/file/src/polylith/clj/core/file/core.clj"
   "components/file/src/polylith/clj/core/file/interface.clj"
   "components/git/src/polylith/clj/core/git/core.clj"
   "components/git/src/polylith/clj/core/git/tag.clj"
   "components/help/src/polylith/clj/core/help/core.clj"
   "components/help/src/polylith/clj/core/help/create.clj"
   "components/help/src/polylith/clj/core/help/create_workspace.clj"
   "components/help/src/polylith/clj/core/help/interface.clj"
   "components/help/src/polylith/clj/core/help/prompt.clj"
   "components/help/src/polylith/clj/core/help/shell.clj"
   "components/help/src/polylith/clj/core/help/summary.clj"
   "components/sh/deps.edn"
   "components/sh/src/polylith/clj/core/sh/core.clj"
   "components/sh/src/polylith/clj/core/sh/interface.clj"
   "components/shell/deps.edn"
   "components/shell/src/polylith/clj/core/shell/candidate/creators.clj"
   "components/shell/src/polylith/clj/core/shell/candidate/engine.clj"
   "components/shell/src/polylith/clj/core/shell/candidate/helpers.clj"
   "components/shell/src/polylith/clj/core/shell/candidate/selectors.clj"
   "components/shell/src/polylith/clj/core/shell/candidate/specification.clj"
   "components/shell/src/polylith/clj/core/shell/core.clj"
   "components/shell/src/polylith/clj/core/shell/disk_selecter.clj"
   "components/shell/src/polylith/clj/core/shell/interface.clj"
   "components/shell/src/polylith/clj/core/shell/old_completer/create.clj"
   "components/shell/src/polylith/clj/core/shell/old_completer/deps.clj"
   "components/shell/src/polylith/clj/core/shell/old_completer/help.clj"
   "components/shell/src/polylith/clj/core/shell/old_completer/ws.clj"
   "components/shell/src/polylith/clj/core/shell/shared.clj"
   "components/shell/src/polylith/clj/core/shell/suggester.clj"
   "components/shell/src/polylith/clj/core/shell/suggester/file.clj"
   "components/shell/src/polylith/clj/core/shell/suggester/ws.clj"
   "components/shell/test/polylith/clj/core/shell/completer_test.clj"
   "components/util/src/polylith/clj/core/util/interface/str.clj"
   "components/util/src/polylith/clj/core/util/str.clj"
   "components/ws-explorer/src/polylith/clj/core/ws_explorer/core.clj"
   "components/ws-explorer/test/polylith/clj/core/ws_explorer/interface_test.clj"
   "deps.edn"
   "development/data/workspace.edn"
   "development/src/dev/jocke.clj"
   "doc/commands.md"
   "doc/ws.md"
   "projects/api/deps.edn"
   "projects/core/deps.edn"
   "projects/deployer/deps.edn"
   "projects/poly/deps.edn"
   "projects/poly/test/project/poly/workspace_test.clj"
   "readme.md"
   "scripts/output/help/01-help.txt"
   "scripts/output/help/07-create-workspace.txt"
   "scripts/output/help/17-prompt.txt"
   "scripts/output/help/17-shell.txt"
   "scripts/output/help/begin/01-help.txt"
   "scripts/output/help/begin/17-prompt.txt"
   "scripts/output/help/begin/17-shell.txt"
   "scripts/output/help/help-doc.sh"
   "scripts/output/help/help-doc.txt"
   "scripts/output/help/help.sh"
   "scripts/output/local-dep-old-format/ws.edn"
   "scripts/output/local-dep/ws.edn"],
  :git-diff-command
  "git diff 8835ad63e6e336ae98939e6467096f0146f5a89c --name-only",
  :changed-components
  ["command"
   "common"
   "creator"
   "deployer"
   "deps"
   "file"
   "git"
   "help"
   "sh"
   "shell"
   "util"
   "ws-explorer"],
  :changed-bases ["poly-cli"],
  :changed-projects ["api" "core" "deployer" "development" "poly"],
  :changed-or-affected-projects
  ["api" "core" "deployer" "development" "poly"],
  :project-to-indirect-changes
  {"api"
   {:src
    ["api"
     "change"
     "lib"
     "path-finder"
     "text-table"
     "user-config"
     "user-input"
     "validator"
     "workspace"
     "workspace-clj"],
    :test []},
   "core"
   {:src
    ["change"
     "lib"
     "path-finder"
     "text-table"
     "user-config"
     "user-input"
     "validator"
     "workspace"],
    :test []},
   "deployer"
   {:src
    ["api"
     "change"
     "deployer-cli"
     "lib"
     "path-finder"
     "text-table"
     "user-config"
     "user-input"
     "validator"
     "workspace"
     "workspace-clj"],
    :test []},
   "poly"
   {:src
    ["change"
     "lib"
     "migrator"
     "path-finder"
     "test-runner"
     "text-table"
     "user-config"
     "user-input"
     "validator"
     "workspace"
     "workspace-clj"
     "ws-file"],
    :test
    ["change"
     "lib"
     "path-finder"
     "test-helper"
     "user-input"
     "validator"
     "workspace"
     "workspace-clj"]},
   "development"
   {:src
    ["api"
     "change"
     "deployer-cli"
     "lib"
     "migrator"
     "path-finder"
     "test-helper"
     "test-runner"
     "text-table"
     "user-config"
     "user-input"
     "validator"
     "workspace"
     "workspace-clj"
     "ws-file"],
    :test
    ["change"
     "lib"
     "path-finder"
     "user-input"
     "validator"
     "workspace"
     "workspace-clj"]}},
  :project-to-bricks-to-test
  {"api" [],
   "core" [],
   "deployer" [],
   "poly"
   ["change"
    "command"
    "creator"
    "deps"
    "file"
    "git"
    "lib"
    "migrator"
    "path-finder"
    "shell"
    "test-helper"
    "test-runner"
    "user-input"
    "util"
    "validator"
    "workspace"
    "workspace-clj"
    "ws-explorer"],
   "development" []},
  :project-to-projects-to-test
  {"api" [],
   "core" [],
   "deployer" [],
   "poly" ["poly"],
   "development" []}},
 :version
 {:release
  {:name "0.2.12-alpha",
   :major 0,
   :minor 2,
   :patch 12,
   :revision "alpha",
   :date "2021-08-28"},
  :ws {:type :toolsdeps2, :breaking 1, :non-breaking 0}},
 :bases
 [{:name "deployer-cli",
   :type "base",
   :paths {:src ["src"], :test []},
   :namespaces
   {:src
    [{:name "core",
      :namespace "polylith.clj.core.deployer-cli.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/bases/deployer-cli/src/polylith/clj/core/deployer_cli/core.clj",
      :imports ["polylith.clj.core.deployer.interface"]}]},
   :lib-deps {},
   :lines-of-code {:src 20, :test 0},
   :lib-imports {},
   :interface-deps {:src ["deployer"], :test []}}
  {:name "poly-cli",
   :type "base",
   :paths {:src ["src"], :test []},
   :namespaces
   {:src
    [{:name "core",
      :namespace "polylith.clj.core.poly-cli.core",
      :file-path
      "/Users/joakimtengstrand/source/polylith/bases/poly-cli/src/polylith/clj/core/poly_cli/core.clj",
      :imports
      ["polylith.clj.core.command.interface"
       "polylith.clj.core.user-input.interface"
       "polylith.clj.core.util.interface.exception"]}
     {:name "api",
      :namespace "polylith.clj.core.poly-cli.api",
      :file-path
      "/Users/joakimtengstrand/source/polylith/bases/poly-cli/src/polylith/clj/core/poly_cli/api.clj",
      :imports
      ["clojure.string"
       "polylith.clj.core.command.interface"
       "polylith.clj.core.user-input.interface"
       "polylith.clj.core.util.interface.exception"]}]},
   :lib-deps {},
   :lines-of-code {:src 291, :test 0},
   :lib-imports {:src ["clojure.string"]},
   :interface-deps {:src ["command" "user-input" "util"], :test []}}]}
