  Validates the workspace.

  poly check [:dev]

  Prints 'OK' and returns 0 if no errors were found.
  If errors or warnings were found, show messages and return the error code,
  or 0 if only warnings. If internal errors, 1 is returned.

  Error 101 - Illegal dependency on namespace.
    Triggered if a :require statement refers to a component namespace
    other than interface. Examples of valid namespaces:
     - com.my.company.mycomponent.interface
     - com.my.company.mycomponent.interface.subns
     - com.my.company.mycomponent.interface.my.subns

  Error 102 - Function or macro is defined twice.
    Triggered if a function or macro is defined twice in the same namespace.

  Error 103 - Missing definitions.
    Triggered if a def, defn or defmacro definition exists in one component's
    interface but is missing in another component that uses the same interface.

  Error 104 - Circular dependencies.
    Triggered if circular dependencies were detected, e.g.:
    Component A depends on B that depends on A (A > B > A), or A > B > C > A.

  Error 105 - Illegal name sharing.
    Triggered if a base has the same name as a component or interface.
    Projects and profiles can be given any name.

  Error 106 - Multiple components that share the same interfaces in a project.
    Triggered if a project contains more than one component that shares the
    same interface.

  Error 107 - Missing components in project.
    Triggered if a component depends on an interface that is not included in the
    project. The solution is to add a component to the project that
    implements the interface.

  Error 108 - Components with an interface that is implemented by more than one
              component are not allowed for the development project.
    The solution is to remove the component from the development project
    and define the deps/paths for each component in separate profiles
    (including test paths).

  Error 109 - Invalid test runner configuration for some projects.
    The value of the optional :create-test-runner key under [:test] or
    [:projects "some-project-name" :test] in workspace.edn must be either
    nil, :default, or a fully qualified symbol referring to a function on
    the poly tool's classpath, which can take a single argument and must return
    an instance of polylith.clj.core.test-runner-contract.interface/TestRunner.

  Error 110 - Invalid config file.
    Triggered if a deps.edn file for a brick or project is invalid.
    It's allowed to omit the deps.edn file entirely, except for development,
    and in that case the brick/project will be ignored.

  Warning 201 - Mismatching argument lists in function or macro.
    Triggered if a function or macro is defined in the interface for a component
    but also defined in the same interface for another component but with a
    different argument list.

  Warning 202 - Missing paths in project.
    Triggered if a path in a project doesn't exist on disk.
    The solution is to add the file or directory, or to remove the path.

  Warning 203 - Path exists in both dev and profile.
    It's discouraged to have the same path in both the development project
    and a profile. The solution is to remove the path from dev or the profile.

  Warning 205 - Non top namespace was found in brick.
    Triggered if a namespace in a brick doesn't start with the top namespaces
    defined in :top-namespace in ./workspace.edn.

  Warning 206 - Unreadable namespace in brick/project.
    Triggered if a namespace can't be parsed or found for a brick or project.
    A way to ignore this warning is to add the :ignore-files key to the brick
    or project in ./workspace.edn. All dashes (-) will be replaced by underscores
    (_). Paths that match exact and paths ending with the specified path(s),
    prepended by a slash, will be ignored, e.g.:
    { ...
      :bricks {"mybrick" {:ignore-files ["myfile.clj"]}}
      :projects {"myproject" {:alias "mp" :ignore-files ["sub-ns/myfile.clj"]}}
      ...}

  Warning 207 - Unnecessary components were found in project.
    Triggered if components were defined in a project that are not used by any of
    its bricks. Development is only checked if :dev is passed in and is only performed
    by the check command (not test and info). To ignore this warning, put the component
    name in the :necessary vector for a project in :projects in ./workspace.edn.
    See an example here: https://github.com/polyfy/polylith/blob/master/workspace.edn
